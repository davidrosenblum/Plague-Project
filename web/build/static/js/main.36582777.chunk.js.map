{"version":3,"sources":["Ajax.js","EventEmitter.js","SimulationUpdateEvent.js","Simulator.js","components/NumSlider.jsx","preset.js","components/Inputs.jsx","components/MailModal.jsx","components/Navbar.jsx","components/Chart.jsx","components/Graph.jsx","components/App.jsx","index.js"],"names":["Ajax","Object","classCallCheck","this","createClass","key","value","options","arguments","length","undefined","Promise","resolve","reject","method","url","window","location","origin","headers","query","data","xhr","XMLHttpRequest","h","onload","onerror","err","queryString","open","setRequestHeader","send","JSON","stringify","request","dict","qs","param","concat","substring","EventEmitter","_listeners","event","willTrigger","type","forEach","listener","eventType","push","listeners","i","splice","SimulationUpdateEvent","day","_type","_day","get","src_Simulator","_EventEmitter","Simulator","_this","possibleConstructorReturn","getPrototypeOf","call","_currentDay","inherits","_this2","href","includes","Access-Control-Allow-Origin","then","status","parse","response","emit","Event","Error","catch","currentDay","set","maxDays","hasData","Math","min","NumSlider","_React$Component","props","numRef","React","createRef","rangeRef","current","init","evt","val","parseFloat","target","max","react_default","a","createElement","className","label","showRange","minText","maxText","ref","onChange","onNumber","bind","step","placeholder","required","disabled","onSlide","n","Component","presets","Seasonal Flu","Infection Length","Transmission","Virulence","Smallpox","Polio","Measles","Inputs","intialImmunityRef","transmissionRef","virulenceRef","initialInfectedRef","intialPopRef","infectionLengthRef","daysRef","state","pending","message","lastBtn","isDisabled","on","onSimulatorLoad","onSimulatorError","URLSearchParams","search","immune_percent","transmission_rate","virulence","initial_infected","initial_population","infection_length","simulation_length","setState","reset","nextDay","load","getInputsDictionary","_this3","autoRun","createCSVDownloadURL","link","document","setAttribute","click","preventDefault","dayByDay","downloadCSV","getAttribute","preset","onSubmit","NumSlider_NumSlider","onPresetChange","onClick","onFormClick","btn","onReset","MailModal","textRef","errorRef","headerRef","typeError","errorTime","errorMsg","other","errMessage","successMessage","e","goodHeader","console","log","BuildArray","post","textError","errors","errorString","text","lib_default","isOpen","showModal","closeModal","submitClick","t","onTypeSelect","name","TypeOther","rows","cols","Navbar","id","openModal","MailModal_MailModal","Chart","onSimulatorData","onSimulatorReset","onSimulatorUpdate","Array","_loop","susceptible","round","Susceptible","infected","Infected","immune","Immune","dead","Dead","population","TotalPopulation","setGraphDay","renderRows","Graph","yLabel","onSimulatorUpdateGraph","largestY","values","map","row","index","y","x","slice","getData","xScale","d3","scale","linear","domain","range","WIDTH","yScale","HEIGHT","onYLabelChange","react_d3_components_lib","axes","width","height","margin","top","bottom","left","right","xAxis","yAxis","App","apply","Navbar_Navbar","Inputs_Inputs","Graph_Graph","Chart_Chart","ReactDOM","render","App_App","querySelector"],"mappings":"2QAAaA,eAAb,oBAAAA,IAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,GAAA,OAAAC,OAAAG,EAAA,EAAAH,CAAAD,EAAA,OAAAK,IAAA,UAAAC,MAAA,WAE8B,IAAXC,EAAWC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAH,GACnB,OAAO,IAAIG,QAAQ,SAACC,EAASC,GAEzB,IAAIC,EAAoC,kBAAnBP,EAAQO,OAAuBP,EAAQO,OAAS,MACjEC,EAA8B,kBAAhBR,EAAQQ,IAAoBR,EAAQQ,IAAMC,OAAOC,SAASC,OACxEC,EAAsC,kBAApBZ,EAAQY,SAAwBZ,EAAQY,QAAWZ,EAAQY,QAAU,GACvFC,EAAkC,kBAAlBb,EAAQa,OAAsBb,EAAQa,MAASb,EAAQa,MAAQ,GAC/EC,EAAgC,qBAAjBd,EAAQc,KAAwBd,EAAQc,KAAO,KAG9DC,EAAM,IAAIC,eAed,IAAI,IAAIC,KAZRF,EAAIG,OAAS,kBAAMb,EAAQU,IAC3BA,EAAII,QAAU,SAAAC,GAAG,OAAId,EAAOc,IAGzBP,IACCL,GAAOf,EAAK4B,YAAYR,IAI5BE,EAAIO,KAAKf,EAAQC,GAGJI,EACTG,EAAIQ,iBAAiBN,EAAGL,EAAQK,IAKjCH,EACoB,kBAATA,EACNC,EAAIS,KAAKC,KAAKC,UAAUZ,IAEvBC,EAAIS,KAAKV,GAEbC,EAAIS,WAvCrB,CAAA1B,IAAA,MAAAC,MAAA,SA4CeS,EAAKI,EAASC,GACrB,OAAOpB,EAAKkC,QAAQ,CAACpB,OAAQ,MAAOC,MAAKI,UAASC,YA7C1D,CAAAf,IAAA,OAAAC,MAAA,SAiDgBS,EAAKI,EAASE,GACtB,OAAOrB,EAAKkC,QAAQ,CAACpB,OAAQ,OAAQC,MAAKI,UAASE,WAlD3D,CAAAhB,IAAA,cAAAC,MAAA,SAsDuB6B,GACf,IAAIC,EAAK,IAET,IAAI,IAAIC,KAASF,EACbC,GAAE,GAAAE,OAAOD,EAAP,KAAAC,OAAgBH,EAAKE,GAArB,KAGN,OAAOD,EAAGG,UAAU,EAAGH,EAAG3B,OAAS,OA7D3CT,EAAA,ICCawC,EAAb,WACI,SAAAA,IAAcvC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqC,GACVrC,KAAKsC,WAAa,GAF1B,OAAAxC,OAAAG,EAAA,EAAAH,CAAAuC,EAAA,EAAAnC,IAAA,OAAAC,MAAA,SAMSoC,GACEvC,KAAKwC,YAAYD,EAAME,OACtBzC,KAAKsC,WAAWC,EAAME,MAAMC,QAAQ,SAAAC,GAAQ,OAAIA,EAASJ,OARrE,CAAArC,IAAA,KAAAC,MAAA,SAaOyC,EAAWD,GACP3C,KAAKwC,YAAYI,GAChB5C,KAAKsC,WAAWM,GAAWC,KAAKF,GAGhC3C,KAAKsC,WAAWM,GAAa,CAACD,KAlB1C,CAAAzC,IAAA,MAAAC,MAAA,SAuBQyC,EAAWD,GACX,GAAG3C,KAAKwC,YAAYI,GAGhB,IAFA,IAAIE,EAAY9C,KAAKsC,WAAWM,GAExBG,EAAI,EAAGA,EAAID,EAAUxC,OAAQyC,IACjC,GAAGD,EAAUC,KAAOJ,EAEhB,OADAG,EAAUE,OAAOD,EAAG,IACb,EAInB,OAAO,IAlCf,CAAA7C,IAAA,cAAAC,MAAA,SAsCgByC,GACR,OAAOA,KAAa5C,KAAKsC,eAvCjCD,EAAA,GCAaY,EAAb,WACI,SAAAA,EAAYR,GAAe,IAATS,EAAS7C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAL,KAAKP,OAAAC,EAAA,EAAAD,CAAAE,KAAAiD,GACvBjD,KAAKmD,MAAQV,EACbzC,KAAKoD,KAAOF,EAHpB,OAAApD,OAAAG,EAAA,EAAAH,CAAAmD,EAAA,EAAA/C,IAAA,OAAAmD,IAAA,WAOQ,OAAOrD,KAAKmD,QAPpB,CAAAjD,IAAA,MAAAmD,IAAA,WAWQ,OAAOrD,KAAKoD,SAXpBH,EAAA,GCsHeK,EAAA,IAjHF,SAAAC,GACT,SAAAC,IAAa,IAAAC,EAAA,OAAA3D,OAAAC,EAAA,EAAAD,CAAAE,KAAAwD,IACTC,EAAA3D,OAAA4D,EAAA,EAAA5D,CAAAE,KAAAF,OAAA6D,EAAA,EAAA7D,CAAA0D,GAAAI,KAAA5D,QAEKkB,KAAO,KACZuC,EAAKI,YAAc,EAJVJ,EADJ,OAAA3D,OAAAgE,EAAA,EAAAhE,CAAA0D,EAAAD,GAAAzD,OAAAG,EAAA,EAAAH,CAAA0D,EAAA,EAAAtD,IAAA,OAAAC,MAAA,SAUJc,GAAM,IAAA8C,EAAA/D,KACP,OAAO,IAAIQ,QAAQ,SAACC,EAASC,GAEzB,IAAIE,EAAMC,OAAOC,SAASkD,KAAKC,SAAS,aAAe,+BAA7C,GAAA9B,OAAiFtB,OAAOC,SAASC,OAAjG,WAGNC,EAAU,CACVkD,8BAA+BrD,OAAOC,SAASC,QAKnDlB,EAAKwD,IAAIzC,EAAKI,EAASC,GAClBkD,KAAK,SAAAhD,GAEF,GAAkB,MAAfA,EAAIiD,OAAe,CAElB,IAEIL,EAAK7C,KAAOW,KAAKwC,MAAMlD,EAAImD,UAE/B,MAAM9C,GAEFd,EAAOc,GACPuC,EAAKQ,KAAK,IAAIC,MAAM,UAIxB/D,IACAsD,EAAKQ,KAAK,IAAIC,MAAM,SAEpBT,EAAKQ,KAAK,IAAIC,MAAM,cAIpB9D,EAAO,IAAI+D,MAAMtD,EAAImD,UAAY,gBACjCP,EAAKQ,KAAK,IAAIC,MAAM,YAG3BE,MAAM,SAAAlD,GAEHd,EAAOc,GACPuC,EAAKQ,KAAK,IAAIC,MAAM,gBApD3B,CAAAtE,IAAA,cAAAC,MAAA,SA0DGc,GACR,IAAIL,EAAMC,OAAOC,SAASkD,KAAKC,SAAS,aAA9B,sCAAA9B,OAAqFtB,OAAOC,SAASC,OAArG,eACV,OAAOlB,EAAKwD,IAAIzC,EAAK,KAAMK,KA5DtB,CAAAf,IAAA,uBAAAC,MAAA,SAgEYc,GACjB,IAAIgB,EAAKpC,EAAK4B,YAAYR,GAC1B,OAAOJ,OAAOC,SAASkD,KAAKC,SAAS,aAA9B,mCAAA9B,OAAgFF,GAAhF,GAAAE,OAA0FtB,OAAOC,SAASC,OAA1G,eAAAoB,OAA8HF,KAlEhI,CAAA/B,IAAA,UAAAC,MAAA,WAwELH,KAAK2E,WAAa3E,KAAKkB,KAAKZ,OAAS,IAxEhC,CAAAJ,IAAA,UAAAC,MAAA,WA8EFH,KAAK2E,WAAa3E,KAAKkB,KAAKZ,QAC3BN,KAAK2E,eA/EJ,CAAAzE,IAAA,QAAAC,MAAA,WAsFLH,KAAKkB,KAAO,KACZlB,KAAK2E,WAAa,EAClB3E,KAAKuE,KAAK,IAAIC,MAAM,YAxFf,CAAAtE,IAAA,cAAAC,MAAA,SA4FG+C,GACRlD,KAAKuE,KAAK,IAAItB,EAAsB,eAAgBC,MA7F/C,CAAAhD,IAAA,aAAA0E,IAAA,SAiGM1B,GACX,IAAI2B,EAAU7E,KAAK8E,QAAW9E,KAAKkB,KAAKZ,OAAS,EAAK,EACtDN,KAAK6D,YAAckB,KAAKC,IAAI9B,EAAK2B,GACjC7E,KAAKuE,KAAK,IAAItB,EAAsB,SAAUjD,KAAK2E,cApG9CtB,IAAA,WA4GL,OAAOrD,KAAK6D,cA5GP,CAAA3D,IAAA,UAAAmD,IAAA,WAwGL,OAAqB,OAAdrD,KAAKkB,SAxGPsC,EAAA,CAA2BnB,ICH3B4C,SAAb,SAAAC,GACI,SAAAD,EAAYE,GAAM,IAAA1B,EAAA,OAAA3D,OAAAC,EAAA,EAAAD,CAAAE,KAAAiF,IACdxB,EAAA3D,OAAA4D,EAAA,EAAA5D,CAAAE,KAAAF,OAAA6D,EAAA,EAAA7D,CAAAmF,GAAArB,KAAA5D,KAAMmF,KAEDC,OAASC,IAAMC,YACpB7B,EAAK8B,SAAWF,IAAMC,YAJR7B,EADtB,OAAA3D,OAAAgE,EAAA,EAAAhE,CAAAmF,EAAAC,GAAApF,OAAAG,EAAA,EAAAH,CAAAmF,EAAA,EAAA/E,IAAA,oBAAAC,MAAA,WAUQH,KAAKoF,OAAOI,QAAQrF,MAAQH,KAAKmF,MAAMM,MAAQzF,KAAKmF,MAAMH,IAC1DhF,KAAKuF,SAASC,QAAQrF,MAAQH,KAAKmF,MAAMM,MAAQzF,KAAKmF,MAAMH,MAXpE,CAAA9E,IAAA,WAAAC,MAAA,SAeauF,GAEL,IAAIC,EAAMC,WAAWF,EAAIG,OAAO1F,OAE7BwF,GAECA,EAAMZ,KAAKC,IAAID,KAAKe,IAAIH,EAAK3F,KAAKmF,MAAMH,KAAMhF,KAAKmF,MAAMW,KAGzD9F,KAAKoF,OAAOI,QAAQrF,MAAQwF,EAC5B3F,KAAKuF,SAASC,QAAQrF,MAAQwF,GAI9B3F,KAAKuF,SAASC,QAAQrF,MAAQH,KAAKmF,MAAMH,MA7BrD,CAAA9E,IAAA,UAAAC,MAAA,SAkCYuF,GAEJ,IAAIC,EAAMD,EAAIG,OAAO1F,MAGrBwF,EAAMZ,KAAKC,IAAID,KAAKe,IAAIH,EAAK3F,KAAKmF,MAAMH,KAAMhF,KAAKmF,MAAMW,KAGzD9F,KAAKoF,OAAOI,QAAQrF,MAAQwF,IA1CpC,CAAAzF,IAAA,SAAAC,MAAA,WA8CQ,OACI4F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,aAAQjG,KAAKmF,MAAMgB,OAClBnG,KAAKmF,MAAMiB,UAAX,IAAAjE,OAA4BnC,KAAKqG,QAAjC,KAAAlE,OAA4CnC,KAAKsG,SAAa,MAEnEP,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SACIM,IAAKvG,KAAKoF,OACVoB,SAAUxG,KAAKyG,SAASC,KAAK1G,MAC7ByC,KAAK,SACLuC,IAAKhF,KAAKmF,MAAMH,IAChBc,IAAK9F,KAAKmF,MAAMW,IAChBa,KAAM3G,KAAKmF,MAAMwB,KACjBC,YAAa5G,KAAKmF,MAAMyB,YACxBC,SAAU7G,KAAKmF,MAAM0B,SACrBC,SAAU9G,KAAKmF,MAAM2B,YAG7Bf,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SACIM,IAAKvG,KAAKuF,SACViB,SAAUxG,KAAK+G,QAAQL,KAAK1G,MAC5ByC,KAAK,QACLuC,IAAKhF,KAAKmF,MAAMH,IAChBc,IAAK9F,KAAKmF,MAAMW,IAChBa,KAAM3G,KAAKmF,MAAMwB,KACjBG,SAAU9G,KAAKmF,MAAM2B,SACrBZ,UAAU,0BA1ElC,CAAAhG,IAAA,QAAA0E,IAAA,SAiFcoC,GACNhH,KAAKoF,OAAOI,QAAQrF,MAAQ6G,EAC5BhH,KAAKuF,SAASC,QAAQrF,MAAQ6G,GAnFtC3D,IAAA,WA+FQ,OAAOrD,KAAKoF,OAAOI,QAAQrF,QA/FnC,CAAAD,IAAA,UAAAmD,IAAA,WAuFQ,OAAOrD,KAAKmF,MAAMkB,QAAUrG,KAAKmF,MAAMkB,QAAUrG,KAAKmF,MAAMH,MAvFpE,CAAA9E,IAAA,UAAAmD,IAAA,WA2FQ,OAAOrD,KAAKmF,MAAMmB,QAAUtG,KAAKmF,MAAMmB,QAAUtG,KAAKmF,MAAMW,QA3FpEb,EAAA,CAA+BI,IAAM4B,YCwBtBC,EA3BO,CAGnBC,eAAe,CACXC,mBAAoB,EACpBC,aAAgB,IAChBC,UAAa,KAGjBC,SAAW,CACVH,mBAAoB,GACpBC,aAAgB,IAChBC,UAAa,KAGdE,MAAQ,CACPJ,mBAAoB,GACpBC,aAAgB,EAChBC,UAAa,KAGdG,QAAU,CACTL,mBAAoB,EACpBC,aAAgB,GAChBC,UAAa,MCnBJI,EAAb,SAAAxC,GACI,SAAAwC,EAAYvC,GAAM,IAAA1B,EAAA,OAAA3D,OAAAC,EAAA,EAAAD,CAAAE,KAAA0H,IACdjE,EAAA3D,OAAA4D,EAAA,EAAA5D,CAAAE,KAAAF,OAAA6D,EAAA,EAAA7D,CAAA4H,GAAA9D,KAAA5D,KAAMmF,KAGDwC,kBAAoBtC,IAAMC,YAC/B7B,EAAKmE,gBAAkBvC,IAAMC,YAC7B7B,EAAKoE,aAAexC,IAAMC,YAC1B7B,EAAKqE,mBAAqBzC,IAAMC,YAChC7B,EAAKsE,aAAe1C,IAAMC,YAC1B7B,EAAKuE,mBAAqB3C,IAAMC,YAChC7B,EAAKwE,QAAU5C,IAAMC,YAErB7B,EAAKyE,MAAQ,CACTC,SAAS,EACTC,QAAS,KACTC,QAAS,KACTC,YAAY,GAhBF7E,EADtB,OAAA3D,OAAAgE,EAAA,EAAAhE,CAAA4H,EAAAxC,GAAApF,OAAAG,EAAA,EAAAH,CAAA4H,EAAA,EAAAxH,IAAA,oBAAAC,MAAA,WAsBQqD,EAAU+E,GAAG,OAAQvI,KAAKwI,gBAAgB9B,KAAK1G,OAC/CwD,EAAU+E,GAAG,QAASvI,KAAKyI,iBAAiB/B,KAAK1G,OAGc,SAA5D,IAAI0I,gBAAgB7H,OAAOC,SAAS6H,QAAQtF,IAAI,UAC/CrD,KAAK8H,mBAAmBtC,QAAQrF,MAAQ,IACxCH,KAAK2H,kBAAkBnC,QAAQrF,MAAQ,GACvCH,KAAK+H,aAAavC,QAAQrF,MAAQ,IAClCH,KAAK6H,aAAarC,QAAQrF,MAAQ,IAClCH,KAAKiI,QAAQzC,QAAQrF,MAAQ,IAC7BH,KAAKgI,mBAAmBxC,QAAQrF,MAAQ,IACxCH,KAAK4H,gBAAgBpC,QAAQrF,MAAQ,MAjCjD,CAAAD,IAAA,sBAAAC,MAAA,WAwCQ,IAAIyI,EAAwB5I,KAAK2H,kBAAkBnC,QAAQrF,MACvD0I,EAAwB7I,KAAK4H,gBAAgBpC,QAAQrF,MACrD2I,EAAwB9I,KAAK6H,aAAarC,QAAQrF,MAClD4I,EAAwB/I,KAAK8H,mBAAmBtC,QAAQrF,MACxD6I,EAAwBhJ,KAAK+H,aAAavC,QAAQrF,MAClD8I,EAAwBjJ,KAAKgI,mBAAmBxC,QAAQrF,MACxD+I,EAAwBlJ,KAAKiI,QAAQzC,QAAQrF,MAMjD,MAAO,CAACyI,iBAAgBC,oBAAmBC,YAAWC,iBAHtDA,EAAmBhE,KAAKC,IAAI+D,EAAkBC,GAG0BA,qBAAoBC,mBAAkBC,uBApDtH,CAAAhJ,IAAA,mBAAAC,MAAA,WAwDQH,KAAKmJ,SAAS,CAAChB,SAAS,MAxDhC,CAAAjI,IAAA,kBAAAC,MAAA,WA4DQH,KAAKmJ,SAAS,CAAChB,SAAS,MA5DhC,CAAAjI,IAAA,UAAAC,MAAA,WAkEQqD,EAAU4F,UAlElB,CAAAlJ,IAAA,WAAAC,MAAA,WAqEc,IAAA4D,EAAA/D,KACFwD,EAAUsB,QAaVtB,EAAU6F,WAXVrJ,KAAKmJ,SAAS,CAAChB,SAAS,IAGxB3E,EAAU8F,KAAKtJ,KAAKuJ,uBACfpF,KAAK,WACFJ,EAAKoF,SAAS,CAACf,QAAS,OACxB5E,EAAU6F,YAEb3E,MAAM,SAAAlD,GAAG,OAAIuC,EAAKoF,SAAS,CAACf,QAAS5G,EAAI4G,eAhF1D,CAAAlI,IAAA,UAAAC,MAAA,WAuFa,IAAAqJ,EAAAxJ,KACDwD,EAAUsB,QAaVtB,EAAUiG,WAXVzJ,KAAKmJ,SAAS,CAAChB,SAAS,IAGxB3E,EAAU8F,KAAKtJ,KAAKuJ,uBACfpF,KAAK,WACFqF,EAAKL,SAAS,CAACf,QAAS,OACxB5E,EAAUiG,YAEb/E,MAAM,SAAAlD,GAAG,OAAIgI,EAAKL,SAAS,CAACf,QAAS5G,EAAI4G,eAlG1D,CAAAlI,IAAA,cAAAC,MAAA,WA2GQ,IAAIH,KAAKkI,MAAMC,QAAQ,CAEnB,IAAIvH,EAAM4C,EAAUkG,qBAAqB1J,KAAKuJ,uBAG1CI,EAAOC,SAAS3D,cAAc,KAClC0D,EAAKE,aAAa,OAAQjJ,GAC1B+I,EAAKE,aAAa,SAAU,UAC5BF,EAAKE,aAAa,WAAY,YAG9BF,EAAKG,QACLH,EAAO,QAvHnB,CAAAzJ,IAAA,WAAAC,MAAA,SAuIauF,GAELA,EAAIqE,iBAKsB,eAAvB/J,KAAKkI,MAAMG,QACVrI,KAAKgK,WAIsB,aAAvBhK,KAAKkI,MAAMG,QACfrI,KAAKyJ,UAIsB,eAAvBzJ,KAAKkI,MAAMG,SACfrI,KAAKiK,gBAzJjB,CAAA/J,IAAA,cAAAC,MAAA,SAgKgBuF,GACR1F,KAAKmJ,SAAS,CAACd,QAAS3C,EAAIG,OAAOqE,aAAa,WAjKxD,CAAAhK,IAAA,iBAAAC,MAAA,SAoKmBuF,GACY,UAApBA,EAAIG,OAAO1F,OACVH,KAAKmJ,SAAS,CAACb,YAAW,IAC1BtI,KAAKgI,mBAAmBxC,QAAQrF,MAAQgK,EAAOzE,EAAIG,OAAO1F,OAAO,oBACjEH,KAAK4H,gBAAgBpC,QAAQrF,MAAQgK,EAAOzE,EAAIG,OAAO1F,OAAlB,aACrCH,KAAK6H,aAAarC,QAAQrF,MAAQgK,EAAOzE,EAAIG,OAAO1F,OAAlB,WAElCH,KAAKmJ,SAAS,CAACb,YAAW,MA3KtC,CAAApI,IAAA,SAAAC,MAAA,WAgLQ,OACI4F,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,0BACAH,EAAAC,EAAAC,cAAA,QAAMmE,SAAUpK,KAAKoK,SAAS1D,KAAK1G,OAC/B+F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAACoE,EAAD,CACIlE,MAAO,6BACPC,WAAW,EACXpB,IAAK,EACLc,IAAK,IACLa,KAAM,EACNE,UAAU,EACVN,IAAKvG,KAAKgI,mBACVlB,SAAU9G,KAAKkI,MAAMI,cAG7BvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAACoE,EAAD,CACIlE,MAAO,oBACPC,WAAW,EACXpB,IAAK,EACLc,IAAK,GACLa,KAAM,IACNE,UAAU,EACVN,IAAKvG,KAAK4H,gBACVd,SAAU9G,KAAKkI,MAAMI,eAIjCvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAACoE,EAAD,CACIlE,MAAO,YACPC,WAAW,EACXpB,IAAK,EACLc,IAAK,EACLa,KAAM,KACNE,UAAU,EACVN,IAAKvG,KAAK6H,aACVf,SAAU9G,KAAKkI,MAAMI,cAG7BvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAACoE,EAAD,CACIlE,MAAO,qBACPC,WAAW,EACXpB,IAAK,EACLc,IAAK,IACLa,KAAM,EACNE,UAAU,EACVN,IAAKvG,KAAK+H,iBAItBhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAACoE,EAAD,CACIlE,MAAO,2BACPC,WAAW,EACXpB,IAAK,EACLc,IAAK,EACLa,KAAM,IACNE,UAAU,EACVN,IAAKvG,KAAK2H,qBAGlB5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAACoE,EAAD,CACIlE,MAAO,mBACPC,WAAW,EACXpB,IAAK,EACLc,IAAK,IACLQ,QAAS,aACTK,KAAM,EACNE,UAAU,EACVN,IAAKvG,KAAK8H,uBAItB/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAACoE,EAAD,CACIlE,MAAO,2BACPC,WAAW,EACXpB,IAAK,EACLc,IAAK,IACLa,KAAM,EACNE,UAAU,EACVN,IAAKvG,KAAKiI,WAGlBlC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAeM,SAAUxG,KAAKsK,eAAe5D,KAAK1G,OAChE+F,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,4BAIZF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACXH,EAAAC,EAAAC,cAAA,UAAQsE,QAASvK,KAAKwK,YAAY9D,KAAK1G,MAAOkG,UAAU,YAAYY,SAAU9G,KAAKkI,MAAMC,QAASsC,IAAI,cAAtG,cADJ,OAEI1E,EAAAC,EAAAC,cAAA,UAAQsE,QAASvK,KAAKwK,YAAY9D,KAAK1G,MAAOkG,UAAU,YAAYY,SAAU9G,KAAKkI,MAAMC,QAASsC,IAAI,YAAtG,YAFJ,OAGI1E,EAAAC,EAAAC,cAAA,UAAQsE,QAASvK,KAAK0K,QAAQhE,KAAK1G,MAAOkG,UAAU,YAAYY,SAAU9G,KAAKkI,MAAMC,QAAS1F,KAAK,UAAnG,SAHJ,OAIIsD,EAAAC,EAAAC,cAAA,UAAQsE,QAASvK,KAAKwK,YAAY9D,KAAK1G,MAAOkG,UAAU,YAAYY,SAAU9G,KAAKkI,MAAMC,QAASsC,IAAI,cAAtG,gBAGR1E,EAAAC,EAAAC,cAAA,WAAMjG,KAAKkI,MAAME,cA9RjCV,EAAA,CAA4BrC,IAAM4B,4BCDrB0D,EAAb,SAAAzF,GAEC,SAAAyF,EAAYxF,GAAM,IAAA1B,EAAA,OAAA3D,OAAAC,EAAA,EAAAD,CAAAE,KAAA2K,IACXlH,EAAA3D,OAAA4D,EAAA,EAAA5D,CAAAE,KAAAF,OAAA6D,EAAA,EAAA7D,CAAA6K,GAAA/G,KAAA5D,KAAMmF,KAGDyF,QAAUvF,IAAMC,YACrB7B,EAAKoH,SAAWxF,IAAMC,YACtB7B,EAAKqH,UAAYzF,IAAMC,YAEvB7B,EAAKhB,KAAO,KACZgB,EAAKsH,WAAY,EACjBtH,EAAKuH,WAAY,EACjBvH,EAAKwH,SAAW,GAEhBxH,EAAKyE,MAAQ,CAClBgD,OAAO,EACPC,WAAW,KACXC,eAAe,MAhBC3H,EAFnB,OAAA3D,OAAAgE,EAAA,EAAAhE,CAAA6K,EAAAzF,GAAApF,OAAAG,EAAA,EAAAH,CAAA6K,EAAA,EAAAzK,IAAA,cAAAC,MAAA,SA0BakL,GAAE,IAAAtH,EAAA/D,KACbA,KAAKmJ,SAAS,CAACgC,WAAW,OAC1BE,EAAEtB,iBACF,IAAIuB,GAAatL,KAAK8K,UAAUtF,SAAWxF,KAAK8K,UAAUtF,QAAQrF,MAAMG,OAAS,EACjF,GAAgB,MAAbN,KAAKyC,MAA8C,IAA9BzC,KAAK4K,QAAQpF,QAAQrF,OAAemL,EAAW,CACtEC,QAAQC,IAAIxL,KAAK4K,QAAQpF,QAAQrF,OACjC,IAAIiI,EAAUpI,KAAKyL,aACnB5L,EAAK6L,KAAL,GAAAvJ,OAAatB,OAAOC,SAASC,OAA7B,SAA2C,KAAK,CAACqH,YAC/CjE,KAAK,SAAAhD,GAEU,GAAkB,MAAfA,EAAIiD,OAEH,IACjBL,EAAKoF,SAAS,CAACiC,eAAe,sBAGb,MAAM5J,GAEvBuC,EAAKoF,SAAS,CAACgC,WAAWtJ,KAAKwC,MAAM7C,UAMtCuC,EAAKoF,SAAS,CAACgC,WAAW,wBAIfzG,MAAM,SAAAlD,GAEH+J,QAAQC,IAAI,0BAEzB,CACJ,IAAIG,EAAY3L,KAAK4K,QAAQpF,QAAQrF,MAEjCyL,EAAS,GAgBb,GAdqB,GAAlB5L,KAAK+K,WACPa,EAAO/I,KAAK,sBAGQ,GAAlB7C,KAAK+K,WACS,SAAb/K,KAAKyC,MAAmD,IAAhCzC,KAAK8K,UAAUtF,QAAQrF,OACjDyL,EAAO/I,KAAK,kCAIE,IAAb8I,GACFC,EAAO/I,KAAK,mBAGV+I,EAAOtL,OAAS,EAAE,CAEpB,IADA,IAAIuL,EAAY,GACR9I,EAAI,EAAEA,EAAI6I,EAAOtL,OAAOyC,IAC/B8I,GAAeD,EAAO7I,GAAG,IAE1B/C,KAAKmJ,SAAS,CAACgC,WAAWU,EAAYzJ,UAAU,EAAEyJ,EAAYvL,OAAO,UAC5C,GAAjBsL,EAAOtL,QACfN,KAAKmJ,SAAS,CAACgC,WAAW,UApF9B,CAAAjL,IAAA,aAAAC,MAAA,WA6FE,IAAI2L,EAAO9L,KAAK4K,QAAQpF,QAAQrF,MAW1B,MAAO,CAACsC,KAPLzC,KAAKkI,MAAMgD,MACNlL,KAAK8K,UAAUtF,QAAQrF,MAEvBH,KAAKyC,KAIAqJ,UAxGrB,CAAA5L,IAAA,eAAAC,MAAA,SA4GcsC,GAEXzC,KAAKyC,KAAOA,EAGI,SAAbzC,KAAKyC,KACPzC,KAAKmJ,SAAS,CAAC+B,OAAO,IAEtBlL,KAAKmJ,SAAS,CAAC+B,OAAO,IAGvBlL,KAAK+K,WAAY,IAvHpB,CAAA7K,IAAA,YAAAC,MAAA,WA4HG,OAAIH,KAAKkI,MAAMgD,MAMbnF,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,wBADD,IACwBF,EAAAC,EAAAC,cAAA,SAAOxD,KAAK,OAAOmE,YAAY,kBAAkBL,IAAKvG,KAAK8K,aAL7E,OA9HX,CAAA5K,IAAA,SAAAC,MAAA,WAyIS,IAAAqJ,EAAAxJ,KACP,OACC+F,EAAAC,EAAAC,cAAA,YACCF,EAAAC,EAAAC,cAAC8F,EAAA/F,EAAD,CAAYgG,OAAQhM,KAAKmF,MAAM8G,WAC9BlG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACZH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAWqE,QAASvK,KAAKmF,MAAM+G,YAA/C,SAEDnG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACfH,EAAAC,EAAAC,cAAA,QAAMmE,SAAUpK,KAAKmM,YAAYzF,KAAK1G,OACtC+F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACdH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,cACAH,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SACdlG,KAAKkI,MAAMiD,YAEbpF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WACdlG,KAAKkI,MAAMkD,kBAIfrF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACdH,EAAAC,EAAAC,cAAA,SAAOxD,KAAK,QAAQ+D,SAAU,SAAC4F,GAAD,OAAO5C,EAAK6C,aAAa,eAAeC,KAAK,QAAQnM,MAAM,YAD1F,uBAGC4F,EAAAC,EAAAC,cAAA,SAAOxD,KAAK,QAAQ+D,SAAU,SAAC4F,GAAD,OAAO5C,EAAK6C,aAAa,oBAAoBC,KAAK,QAAQnM,MAAM,SAH/F,qBAKC4F,EAAAC,EAAAC,cAAA,SAAOxD,KAAK,QAAQ+D,SAAU,SAAC4F,GAAD,OAAO5C,EAAK6C,aAAa,UAAUC,KAAK,QAAQnM,MAAM,UALrF,SAOA4F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACblG,KAAKuM,aAEPxG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACdH,EAAAC,EAAAC,cAAA,YAAUuG,KAAK,IAAIC,KAAK,MAAM7F,YAAY,wBAAwBL,IAAKvG,KAAK4K,WAE7E7E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACdH,EAAAC,EAAAC,cAAA,SAAOxD,KAAK,oBA3KpBkI,EAAA,CAA+BtF,IAAM4B,WCDxByF,EAAb,SAAAxH,GAEC,SAAAwH,EAAYvH,GAAM,IAAA1B,EAAA,OAAA3D,OAAAC,EAAA,EAAAD,CAAAE,KAAA0M,IACjBjJ,EAAA3D,OAAA4D,EAAA,EAAA5D,CAAAE,KAAAF,OAAA6D,EAAA,EAAA7D,CAAA4M,GAAA9I,KAAA5D,KAAMmF,KAEE+C,MAAQ,CACZ+D,WAAW,EACXC,YAAW,GALEzI,EAFnB,OAAA3D,OAAAgE,EAAA,EAAAhE,CAAA4M,EAAAxH,GAAApF,OAAAG,EAAA,EAAAH,CAAA4M,EAAA,EAAAxM,IAAA,aAAAC,MAAA,WAaEH,KAAKmJ,SAAS,CAAC8C,WAAU,MAb3B,CAAA/L,IAAA,YAAAC,MAAA,WAiBEH,KAAKmJ,SAAS,CAAC8C,WAAU,MAjB3B,CAAA/L,IAAA,SAAAC,MAAA,WAqBE,OACC4F,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iDACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2ByG,GAAG,0BAC5C5G,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACZH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAWqE,QAASvK,KAAK4M,UAAUlG,KAAK1G,OAAxD,cAA0E+F,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAhB,kBAK5EH,EAAAC,EAAAC,cAAC4G,EAAD,CAAWZ,UAAWjM,KAAKkI,MAAM+D,UAAWC,WAAYlM,KAAKkM,WAAWxF,KAAK1G,aAhCtF0M,EAAA,CAA4BrH,IAAM4B,WCArB6F,EAAb,SAAA5H,GACC,SAAA4H,EAAY3H,GAAM,IAAA1B,EAAA,OAAA3D,OAAAC,EAAA,EAAAD,CAAAE,KAAA8M,IACjBrJ,EAAA3D,OAAA4D,EAAA,EAAA5D,CAAAE,KAAAF,OAAA6D,EAAA,EAAA7D,CAAAgN,GAAAlJ,KAAA5D,KAAMmF,KAED+C,MAAQ,CACZhH,KAAM,KACNgC,IAAK,GALWO,EADnB,OAAA3D,OAAAgE,EAAA,EAAAhE,CAAAgN,EAAA5H,GAAApF,OAAAG,EAAA,EAAAH,CAAAgN,EAAA,EAAA5M,IAAA,oBAAAC,MAAA,WAYEqD,EAAU+E,GAAG,OAAQvI,KAAK+M,gBAAgBrG,KAAK1G,OAG/CwD,EAAU+E,GAAG,QAASvI,KAAKgN,iBAAiBtG,KAAK1G,OAGjDwD,EAAU+E,GAAG,SAAUvI,KAAKiN,kBAAkBvG,KAAK1G,SAlBrD,CAAAE,IAAA,kBAAAC,MAAA,WAuBEH,KAAKmJ,SAAS,CAACjI,KAAMsC,EAAUtC,SAvBjC,CAAAhB,IAAA,mBAAAC,MAAA,WA4BEH,KAAKmJ,SAAS,CAACjI,KAAM,KAAMgC,IAAK,MA5BlC,CAAAhD,IAAA,oBAAAC,MAAA,WAiCEH,KAAKmJ,SAAS,CAACjG,IAAKM,EAAUmB,eAjChC,CAAAzE,IAAA,aAAAC,MAAA,WAsCE,GAAGqD,EAAUsB,QAAQ,CAGpB,IAFA,IAAI0H,EAAO,IAAIU,MAAM1J,EAAUmB,WAAa,GADxBwI,EAAA,SAGZpK,GACP,IAAIG,EAAMM,EAAUtC,KAAK6B,GAErBqK,EAAcrI,KAAKsI,MAAMnK,EAAIoK,aAChCC,EAAWxI,KAAKsI,MAAMnK,EAAIsK,UAC1BC,EAAS1I,KAAKsI,MAAMnK,EAAIwK,QACxBC,EAAO5I,KAAKsI,MAAMnK,EAAI0K,MACtBC,EAAa9I,KAAKsI,MAAMnK,EAAI4K,iBAE7BtB,EAAKzJ,GACJgD,EAAAC,EAAAC,cAAA,MAAI/F,IAAK6C,GACRgD,EAAAC,EAAAC,cAAA,MAAIsE,QAAS,kBAAI/G,EAAUuK,YAAYhL,KAAKA,GAC5CgD,EAAAC,EAAAC,cAAA,UAAKmH,GACLrH,EAAAC,EAAAC,cAAA,UAAKsH,GACLxH,EAAAC,EAAAC,cAAA,UAAKwH,GACL1H,EAAAC,EAAAC,cAAA,UAAK0H,GACL5H,EAAAC,EAAAC,cAAA,UAAK4H,KAhBA9K,EAAI,EAAGA,GAAKS,EAAUmB,WAAY5B,IAAIoK,EAAtCpK,GAqBR,OAAOyJ,EAGR,OAAO,OAjET,CAAAtM,IAAA,SAAAC,MAAA,WAqEE,OAA2B,OAApBH,KAAKkI,MAAMhH,KACjB6E,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,sCAChBH,EAAAC,EAAAC,cAAA,aACCF,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,gCAGFF,EAAAC,EAAAC,cAAA,aACEjG,KAAKgO,gBAIN,SAvFNlB,EAAA,CAA2BzH,IAAM4B,mBCCpBgH,EAAb,SAAA/I,GACC,SAAA+I,EAAY9I,GAAM,IAAA1B,EAAA,OAAA3D,OAAAC,EAAA,EAAAD,CAAAE,KAAAiO,IACjBxK,EAAA3D,OAAA4D,EAAA,EAAA5D,CAAAE,KAAAF,OAAA6D,EAAA,EAAA7D,CAAAmO,GAAArK,KAAA5D,KAAMmF,KAEE+C,MAAQ,CACfhH,KAAM,KACNgC,IAAK,EACLgL,OAAQ,YANQzK,EADnB,OAAA3D,OAAAgE,EAAA,EAAAhE,CAAAmO,EAAA/I,GAAApF,OAAAG,EAAA,EAAAH,CAAAmO,EAAA,EAAA/N,IAAA,oBAAAC,MAAA,WAaEqD,EAAU+E,GAAG,OAAQvI,KAAK+M,gBAAgBrG,KAAK1G,OAG/CwD,EAAU+E,GAAG,QAASvI,KAAKgN,iBAAiBtG,KAAK1G,OAGjDwD,EAAU+E,GAAG,SAAUvI,KAAKiN,kBAAkBvG,KAAK1G,OAGnDwD,EAAU+E,GAAG,eAAgBvI,KAAKmO,uBAAuBzH,KAAK1G,SAtBhE,CAAAE,IAAA,kBAAAC,MAAA,WA4BEH,KAAKmJ,SAAS,CAACjI,KAAMsC,EAAUtC,SA5BjC,CAAAhB,IAAA,mBAAAC,MAAA,WAiCEH,KAAKmJ,SAAS,CAACjI,KAAM,KAAMgC,IAAK,MAjClC,CAAAhD,IAAA,oBAAAC,MAAA,WAsCEH,KAAKmJ,SAAS,CAACjG,IAAKM,EAAUmB,eAtChC,CAAAzE,IAAA,yBAAAC,MAAA,SA0CwBuF,GAEA,kBAAZA,EAAIxC,KACblD,KAAKmJ,SAAS,CAACjG,IAAKwC,EAAIxC,QA7C3B,CAAAhD,IAAA,iBAAAC,MAAA,SAkDgBuF,GACd1F,KAAKmJ,SAAS,CAAC+E,OAAQxI,EAAIG,OAAO1F,UAnDpC,CAAAD,IAAA,UAAAC,MAAA,WAuDU,IAAA4D,EAAA/D,KACR,IAAIA,KAAKkI,MAAMhH,MAAQlB,KAAKkI,MAAMhF,IAAM,EACvC,OAAO,KAGR,IAAIkL,EAAW,EAef,MAAO,CAACC,OAbGrO,KAAKkI,MAAMhH,KAAKoN,IAAI,SAACC,EAAKC,GACpC,IAAIC,EAAI7I,WAAW2I,EAAIxK,EAAKmE,MAAMgG,SAIlC,OAFAE,EAAWrJ,KAAKe,IAAIsI,EAAUK,GAEvB,CACNC,EAAGF,EACHC,OAKgBE,MAAM,EAAG3O,KAAKkI,MAAMhF,IAAM,GAC5BkL,cA3ElB,CAAAlO,IAAA,SAAAC,MAAA,WAgFE,IAOIe,EAAOlB,KAAK4O,UAChB,GAAG1N,EAAK,CAEP,IAAI2N,EAASC,KAAGC,MAAMC,SACpBC,OAAO,CAAC,EAAG/N,EAAKmN,OAAO/N,OAAO,IAC9B4O,MAAM,CAAC,EAAGC,MAGRC,EAASN,KAAGC,MAAMC,SACpBC,OAAO,CAAC/N,EAAKkN,SAAU,IACvBc,MAAM,CAAC,EAAGG,MAEZ,OACCtJ,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBM,SAAUxG,KAAKsP,eAAe5I,KAAK1G,OACjE+F,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBACjBH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,wBAGFF,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACsJ,EAAA,UAAD,CACCrO,KAAMA,EACNsO,MAAI,EACJC,MAlCW,IAmCXC,OAlCO,IAmCPC,OAAQ,CACPC,IAnCS,GAmCQC,OAlCN,GAmCXC,KAlCU,GAkCSC,MAjCR,IAmCZC,MAAO,CAAC7J,MAAO,OACf8J,MAAO,CAAC9J,MAAOnG,KAAKkI,MAAMgG,QAC1BW,OAAQA,EACRO,OAAQA,MAOb,OAAO,SAlITnB,EAAA,CAA2B5I,IAAM4B,WCIpBiJ,EAAb,SAAAhL,GAAA,SAAAgL,IAAA,OAAApQ,OAAAC,EAAA,EAAAD,CAAAE,KAAAkQ,GAAApQ,OAAA4D,EAAA,EAAA5D,CAAAE,KAAAF,OAAA6D,EAAA,EAAA7D,CAAAoQ,GAAAC,MAAAnQ,KAAAK,YAAA,OAAAP,OAAAgE,EAAA,EAAAhE,CAAAoQ,EAAAhL,GAAApF,OAAAG,EAAA,EAAAH,CAAAoQ,EAAA,EAAAhQ,IAAA,SAAAC,MAAA,WAEQ,OACI4F,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACmK,EAAD,MACArK,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAhB,QACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qCACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAACoK,EAAD,OAEJtK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAACqK,EAAD,QAGRvK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACsK,EAAD,QAGRxK,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yBACdH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,qCAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,KAAGjC,KAAK,sCAAsC6B,OAAO,UAArD,uBA3B5BqK,EAAA,CAAyB7K,IAAM4B,WCJ/BuJ,IAASC,OAAO1K,EAAAC,EAAAC,cAACyK,EAAD,MAAQ9G,SAAS+G,cAAc","file":"static/js/main.36582777.chunk.js","sourcesContent":["export class Ajax{\r\n    // sends an async http request \r\n    static request(options={}){\r\n        return new Promise((resolve, reject) => {\r\n            // extract config from options object\r\n            let method = (typeof options.method === \"string\") ? options.method : \"GET\",\r\n                url = (typeof options.url === \"string\") ? options.url : window.location.origin,\r\n                headers = (typeof options.headers === \"object\" && options.headers) ? options.headers : {},\r\n                query = (typeof options.query === \"object\" && options.query) ? options.query : {},\r\n                data = (typeof options.data !== \"undefined\") ? options.data : null;\r\n\r\n            // create the request\r\n            let xhr = new XMLHttpRequest();\r\n\r\n            // attach listeners\r\n            xhr.onload = () => resolve(xhr);\r\n            xhr.onerror = err => reject(err);\r\n\r\n            // apply query string\r\n            if(query){\r\n                url += Ajax.queryString(query);\r\n            }\r\n\r\n            // open the request\r\n            xhr.open(method, url);\r\n\r\n            // apply http headers\r\n            for(let h in headers){\r\n                xhr.setRequestHeader(h, headers[h]);\r\n            }\r\n\r\n            // send the request\r\n            // send JSON if the data is not a string\r\n            if(data){\r\n                if(typeof data !== \"string\"){\r\n                    xhr.send(JSON.stringify(data));\r\n                }\r\n                else xhr.send(data);\r\n            }\r\n            else xhr.send();\r\n        });\r\n    }\r\n\r\n    // async http get request\r\n    static get(url, headers, query){\r\n        return Ajax.request({method: \"GET\", url, headers, query});\r\n    }\r\n\r\n    // async http post request\r\n    static post(url, headers, data){\r\n        return Ajax.request({method: \"POST\", url, headers, data});\r\n    }\r\n\r\n    // creates a query string from an object\r\n    static queryString(dict){\r\n        let qs = \"?\";\r\n\r\n        for(let param in dict){\r\n            qs += `${param}=${dict[param]}&`;\r\n        }\r\n\r\n        return qs.substring(0, qs.length - 1);\r\n    }\r\n}","// simple event emitter class\r\nexport class EventEmitter{\r\n    constructor(){\r\n        this._listeners = {};   // 'private' dictionary of {eventType: listenerFunction}\r\n    }\r\n\r\n    // triggers all listening functions\r\n    emit(event){\r\n        if(this.willTrigger(event.type)){\r\n            this._listeners[event.type].forEach(listener => listener(event));\r\n        }\r\n    }\r\n\r\n    // adds a listener\r\n    on(eventType, listener){\r\n        if(this.willTrigger(eventType)){\r\n            this._listeners[eventType].push(listener);\r\n        }\r\n        else{\r\n            this._listeners[eventType] = [listener];\r\n        }\r\n    }\r\n\r\n    // removes a listener\r\n    off(eventType, listener){\r\n        if(this.willTrigger(eventType)){\r\n            let listeners = this._listeners[eventType];\r\n\r\n            for(let i = 0; i < listeners.length; i++){\r\n                if(listeners[i] === listener){\r\n                    listeners.splice(i, 1);\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // checks if there are any listeners for a given type\r\n    willTrigger(eventType){\r\n        return eventType in this._listeners;\r\n    }\r\n}","// simple event object for simulation updates \r\nexport class SimulationUpdateEvent{\r\n    constructor(type, day=null){\r\n        this._type = type;\r\n        this._day = day;\r\n    }\r\n\r\n    get type(){\r\n        return this._type;\r\n    }\r\n\r\n    get day(){\r\n        return this._day;\r\n    }\r\n}","import { Ajax } from \"./Ajax\";\r\nimport { EventEmitter } from \"./EventEmitter\";\r\nimport { SimulationUpdateEvent } from \"./SimulationUpdateEvent\";\r\n\r\n// singleton for holding simulation data\r\n// event-driven to keep chart + graph updated\r\nlet Simulator = class Simulator extends EventEmitter{\r\n    constructor(){\r\n        super();\r\n\r\n        this.data = null;       // simulation data array\r\n        this._currentDay = 0;    // 'private' current simulation day\r\n    }\r\n\r\n    // hits the API for data, signals progress\r\n    // query should be a dictionary of the inputs, will be converted into a query string\r\n    load(query){\r\n        return new Promise((resolve, reject) => {\r\n            // figure out endpoint\r\n            let url = window.location.href.includes(\"localhost\") ? \"http://localhost:8080/plague\" : `${window.location.origin}/plague`;\r\n            \r\n            // CORS headers (use foreign domain)\r\n            let headers = {\r\n                \"Access-Control-Allow-Origin\": window.location.origin\r\n            };\r\n\r\n            // ajax call with query string\r\n            // (null headers)\r\n            Ajax.get(url, headers, query)\r\n                .then(xhr => {    \r\n                    // ajax resolved (could be bad/good request, but server responded)\r\n                    if(xhr.status === 200){\r\n                        // good request - attempt to parse results json\r\n                        try{\r\n                            // parse json\r\n                            this.data = JSON.parse(xhr.response);\r\n                        }\r\n                        catch(err){\r\n                            // json parse error (should never happen)\r\n                            reject(err);\r\n                            this.emit(new Event(\"error\"));  // server responded with bad request signal\r\n                        }\r\n\r\n                        // done, resolve promise and emit load + data\r\n                        resolve();\r\n                        this.emit(new Event(\"load\"));   // server responded with good request signal\r\n\r\n                        this.emit(new Event(\"data\"));   // parsed data signal\r\n                    }\r\n                    else{\r\n                        // bad request\r\n                        reject(new Error(xhr.response || \"Bad request\"));\r\n                        this.emit(new Event(\"error\"));  // server responded with bad request signal\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    // ajax request died (really bad NOT a 400 error!)\r\n                    reject(err);\r\n                    this.emit(new Event(\"error\"));  // request died signal\r\n                });\r\n        });\r\n    }\r\n\r\n    // async download\r\n    downloadCSV(query){\r\n        let url = window.location.href.includes(\"localhost\") ? `http://localhost:8080/plague/csv` : `${window.location.origin}/plague/csv`;\r\n        return Ajax.get(url, null, query);\r\n    }\r\n\r\n    // csv download url\r\n    createCSVDownloadURL(query){\r\n        let qs = Ajax.queryString(query);\r\n        return window.location.href.includes(\"localhost\") ? `http://localhost:8080/plague/csv${qs}` : `${window.location.origin}/plague/csv${qs}`;\r\n    }\r\n\r\n    // simulation moves to the last day\r\n    // (triggers listeners)\r\n    autoRun(){\r\n        this.currentDay = this.data.length - 1; // auto emits update\r\n    }\r\n\r\n    // steps the simulation forward one day\r\n    // (triggers listeners)\r\n    nextDay(){\r\n        if(this.currentDay < this.data.length){\r\n            this.currentDay++;  // auto emits update\r\n        }\r\n    }\r\n\r\n    // resets simulation to day 0 and clears all stored data\r\n    // (triggers listeners)\r\n    reset(){\r\n        this.data = null;\r\n        this.currentDay = 0;\r\n        this.emit(new Event(\"reset\"));\r\n    }\r\n\r\n    // updates the graph day \r\n    setGraphDay(day){\r\n        this.emit(new SimulationUpdateEvent(\"update-graph\", day));\r\n    }\r\n\r\n    // always emit update\r\n    set currentDay(day){\r\n        let maxDays = this.hasData ? (this.data.length - 1) : 0;\r\n        this._currentDay = Math.min(day, maxDays); \r\n        this.emit(new SimulationUpdateEvent(\"update\", this.currentDay));\r\n    }\r\n\r\n    get hasData(){\r\n        return this.data !== null;\r\n    }\r\n\r\n    get currentDay(){\r\n        return this._currentDay;\r\n    }\r\n}\r\n\r\n// singleton\r\nexport default new Simulator();","import \"./NumSlider.css\";\r\nimport React from \"react\";\r\n\r\nexport class NumSlider extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.numRef = React.createRef();\r\n        this.rangeRef = React.createRef();\r\n    }\r\n\r\n    // mounted - set the default numbers\r\n    componentDidMount(){\r\n        this.numRef.current.value = this.props.init || this.props.min;\r\n        this.rangeRef.current.value = this.props.init || this.props.min;\r\n    }\r\n\r\n    // on text field input\r\n    onNumber(evt){\r\n        // set the range value to the number value\r\n        let val = parseFloat(evt.target.value);\r\n    \r\n        if(val){\r\n            // enforce min/max constraints\r\n            val = Math.min(Math.max(val, this.props.min), this.props.max); \r\n\r\n            // update inputs\r\n            this.numRef.current.value = val;\r\n            this.rangeRef.current.value = val;\r\n        }\r\n        else{\r\n            // empty input - range at min and number will be empty\r\n            this.rangeRef.current.value = this.props.min;\r\n        }\r\n    }\r\n\r\n    // on range bar move\r\n    onSlide(evt){\r\n        // set the text value to the number value\r\n        let val = evt.target.value;\r\n\r\n        // enforce min/max constraints \r\n        val = Math.min(Math.max(val, this.props.min), this.props.max);\r\n\r\n        // update number input\r\n        this.numRef.current.value = val;\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"num-slider-container\">\r\n                <div>\r\n                    <label>{this.props.label}</label>\r\n                    {this.props.showRange ? (` ${this.minText}-${this.maxText}`) : null}\r\n                </div>\r\n                <div>\r\n                    <input \r\n                        ref={this.numRef}\r\n                        onChange={this.onNumber.bind(this)}\r\n                        type=\"number\"\r\n                        min={this.props.min}\r\n                        max={this.props.max}\r\n                        step={this.props.step}\r\n                        placeholder={this.props.placeholder}\r\n                        required={this.props.required}\r\n                        disabled={this.props.disabled}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <input\r\n                        ref={this.rangeRef}\r\n                        onChange={this.onSlide.bind(this)}\r\n                        type=\"range\"\r\n                        min={this.props.min}\r\n                        max={this.props.max}\r\n                        step={this.props.step}\r\n                        disabled={this.props.disabled}\r\n                        className=\"num-slider-slider\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    set value(n){\r\n        this.numRef.current.value = n;\r\n        this.rangeRef.current.value = n;\r\n    }\r\n\r\n    get minText(){\r\n        return this.props.minText ? this.props.minText : this.props.min;\r\n    }\r\n\r\n    get maxText(){\r\n        return this.props.maxText ? this.props.maxText : this.props.max;\r\n    }\r\n\r\n    get value(){\r\n        return this.numRef.current.value;\r\n    }\r\n}","export const presets ={\r\n    //presets in the inputs go here\r\n    //seasonal flu\r\n   \"Seasonal Flu\":{\r\n       \"Infection Length\": 8,\r\n       \"Transmission\": 1.2,\r\n       \"Virulence\": 0.01\r\n   },\r\n   //smallpox\r\n   \"Smallpox\":{\r\n    \"Infection Length\": 14,\r\n    \"Transmission\": 2.5,\r\n    \"Virulence\": 0.25 \r\n   },\r\n   //polio\r\n   \"Polio\":{\r\n    \"Infection Length\": 18,\r\n    \"Transmission\": 1,\r\n    \"Virulence\": 0.01 \r\n   },\r\n   //measles\r\n   \"Measles\":{\r\n    \"Infection Length\": 8,\r\n    \"Transmission\": 10,\r\n    \"Virulence\": 0.01 \r\n   },\r\n}\r\nexport default presets;\r\n","import React from \"react\";\r\nimport Simulator from \"../Simulator\";\r\nimport { NumSlider } from \"./NumSlider\";\r\nimport preset from \"../preset\"\r\n\r\nexport class Inputs extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        // input refs\r\n        this.intialImmunityRef = React.createRef();\r\n        this.transmissionRef = React.createRef();\r\n        this.virulenceRef = React.createRef();\r\n        this.initialInfectedRef = React.createRef();\r\n        this.intialPopRef = React.createRef();\r\n        this.infectionLengthRef = React.createRef();\r\n        this.daysRef = React.createRef();\r\n\r\n        this.state = {\r\n            pending: false,         // no new requests while pending (disable buttons)\r\n            message: null,          // message to display (errors)\r\n            lastBtn: null,\r\n            isDisabled: false       // to disable/enable fields depending on what preset is selected\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        Simulator.on(\"load\", this.onSimulatorLoad.bind(this));\r\n        Simulator.on(\"error\", this.onSimulatorError.bind(this));\r\n\r\n        // test values\r\n        if(new URLSearchParams(window.location.search).get(\"test\") === \"true\"){\r\n            this.initialInfectedRef.current.value = 500;\r\n            this.intialImmunityRef.current.value = 0.10;\r\n            this.intialPopRef.current.value = 1000000;\r\n            this.virulenceRef.current.value = 0.25;\r\n            this.daysRef.current.value = 365;\r\n            this.infectionLengthRef.current.value = 100;\r\n            this.transmissionRef.current.value = 0.2;\r\n        }\r\n    }\r\n\r\n    // creates a dictionary of all the inputs and their values (names formatted for the API call) \r\n    getInputsDictionary(){\r\n        // extract data from inputs to use in query string \r\n        let immune_percent =        this.intialImmunityRef.current.value,\r\n            transmission_rate =     this.transmissionRef.current.value,\r\n            virulence =             this.virulenceRef.current.value,\r\n            initial_infected =      this.initialInfectedRef.current.value,\r\n            initial_population =    this.intialPopRef.current.value,\r\n            infection_length =      this.infectionLengthRef.current.value,\r\n            simulation_length =     this.daysRef.current.value;\r\n\r\n        // make sure infected <= population\r\n        initial_infected = Math.min(initial_infected, initial_population);\r\n\r\n        // MUST match API expectations! \r\n        return {immune_percent, transmission_rate, virulence, initial_infected, initial_population, infection_length, simulation_length};\r\n    }\r\n\r\n    onSimulatorError(){\r\n        this.setState({pending: false});    // enable buttons\r\n    }\r\n\r\n    onSimulatorLoad(){\r\n        this.setState({pending: false});    // enable buttons\r\n    }\r\n\r\n    // called when then the reset button is clicked\r\n    onReset(){\r\n        // cleared stored simulation data\r\n        Simulator.reset();\r\n    }\r\n\r\n    dayByDay(){\r\n        if(!Simulator.hasData){\r\n            // disable buttons for loading time\r\n            this.setState({pending: true});\r\n\r\n            // load data then show next day\r\n            Simulator.load(this.getInputsDictionary())\r\n                .then(() => {\r\n                    this.setState({message: null}); // remove possible err message\r\n                    Simulator.nextDay();\r\n                })\r\n                .catch(err => this.setState({message: err.message}));\r\n        }\r\n        else{\r\n            Simulator.nextDay();\r\n        }\r\n    }\r\n\r\n    autoRun(){\r\n        if(!Simulator.hasData){\r\n            // disable buttons for loading time\r\n            this.setState({pending: true});\r\n\r\n            // load data then auto run\r\n            Simulator.load(this.getInputsDictionary())\r\n                .then(() => {\r\n                    this.setState({message: null}); // remove possible err message\r\n                    Simulator.autoRun();\r\n                })\r\n                .catch(err => this.setState({message: err.message}));\r\n        }\r\n        else{\r\n            Simulator.autoRun();\r\n        }\r\n    }\r\n\r\n    // downloads the csv file\r\n    downloadCSV(){\r\n        if(!this.state.pending){\r\n            // create download link (never rendered)\r\n            let url = Simulator.createCSVDownloadURL(this.getInputsDictionary());\r\n\r\n            // create a link tag\r\n            let link = document.createElement(\"a\");\r\n            link.setAttribute(\"href\", url);\r\n            link.setAttribute(\"target\", \"_blank\");\r\n            link.setAttribute(\"download\", \"download\");\r\n\r\n            // click the tag\r\n            link.click();\r\n            link = null;\r\n\r\n            /*\r\n            //this.setState({pending: true});     // disable buttons\r\n\r\n            // async csv download request\r\n            Simulator.downloadCSV(this.getInputsDictionary())\r\n                .catch(err => this.setState({message: err.message}))    // error\r\n                .then(() => this.setState({pending: false}));           // enable buttons after fulfilled/rejected\r\n            */\r\n        }\r\n    }\r\n\r\n    // called when the form is 'submitted'\r\n    // entire purpose is to block the sending of the form\r\n    // (submit enforces 'required', 'min', 'max' constraints)\r\n    onSubmit(evt){\r\n        // no default submission (using ajax instead)\r\n        evt.preventDefault();\r\n\r\n        // problem - both autorun + next day activate this... (only way to do it with using form requires)\r\n\r\n        // day-by-day was the trigger\r\n        if(this.state.lastBtn === \"day-by-day\"){\r\n            this.dayByDay();\r\n        }\r\n\r\n        // autorun was the trigger\r\n        else if(this.state.lastBtn === \"auto-run\"){\r\n            this.autoRun();\r\n        }\r\n\r\n        // csv export was the trigger\r\n        else if(this.state.lastBtn === \"export-csv\"){\r\n            this.downloadCSV();\r\n        }\r\n        \r\n    }\r\n\r\n    // sets the last button to 'day-by-day' or 'autorun'\r\n    // kinda ugly but its because form has 2 submit buttons\r\n    onFormClick(evt){\r\n        this.setState({lastBtn: evt.target.getAttribute(\"btn\")});\r\n    }\r\n\r\n    onPresetChange(evt){\r\n        if(evt.target.value != \"Custom\"){\r\n            this.setState({isDisabled:true});\r\n            this.infectionLengthRef.current.value = preset[evt.target.value][\"Infection Length\"];\r\n            this.transmissionRef.current.value = preset[evt.target.value][\"Transmission\"];\r\n            this.virulenceRef.current.value = preset[evt.target.value][\"Virulence\"]\r\n        }else{\r\n            this.setState({isDisabled:false});\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h5 className=\"text-center\">Experimental Variables</h5>\r\n                <form onSubmit={this.onSubmit.bind(this)}>\r\n                    <div className=\"row\">\r\n                        <div className=\"form-group col-lg-6\">\r\n                            <NumSlider\r\n                                label={\"Length of Infection (Days)\"}\r\n                                showRange={true}\r\n                                min={1}\r\n                                max={365}\r\n                                step={1}\r\n                                required={true}\r\n                                ref={this.infectionLengthRef}\r\n                                disabled={this.state.isDisabled}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group col-lg-6\">\r\n                            <NumSlider\r\n                                label={\"Transmission Rate\"}\r\n                                showRange={true}\r\n                                min={0}\r\n                                max={20}\r\n                                step={0.01}\r\n                                required={true}\r\n                                ref={this.transmissionRef}\r\n                                disabled={this.state.isDisabled}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"form-group col-lg-6\">\r\n                            <NumSlider\r\n                                label={\"Virulence\"}\r\n                                showRange={true}\r\n                                min={0}\r\n                                max={1}\r\n                                step={0.001}\r\n                                required={true}\r\n                                ref={this.virulenceRef}\r\n                                disabled={this.state.isDisabled}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group col-lg-6\">\r\n                            <NumSlider\r\n                                label={\"Initial Population\"}\r\n                                showRange={true}\r\n                                min={1}\r\n                                max={1000000}\r\n                                step={1}\r\n                                required={true}\r\n                                ref={this.intialPopRef}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"form-group col-lg-6\">\r\n                            <NumSlider\r\n                                label={\"Initial Immunity Percent\"}\r\n                                showRange={true}\r\n                                min={0}\r\n                                max={1}\r\n                                step={0.01}\r\n                                required={true}\r\n                                ref={this.intialImmunityRef}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group col-lg-6\">\r\n                            <NumSlider\r\n                                label={\"Initial Infected\"}\r\n                                showRange={true}\r\n                                min={0}\r\n                                max={1000000}\r\n                                maxText={\"Population\"}\r\n                                step={1}\r\n                                required={true}\r\n                                ref={this.initialInfectedRef}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"form-group col-lg-6\">\r\n                            <NumSlider\r\n                                label={\"Simulation Length (Days)\"}\r\n                                showRange={true}\r\n                                min={1}\r\n                                max={365}\r\n                                step={1}\r\n                                required={true}\r\n                                ref={this.daysRef}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group col-lg-6\">\r\n                            <label>Presets:</label>\r\n                            <select className=\"form-control\" onChange={this.onPresetChange.bind(this)}>\r\n                                <option>Custom</option>\r\n                                <option>Seasonal Flu</option>\r\n                                <option>Smallpox</option>\r\n                                <option>Polio</option>\r\n                                <option>Measles</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group text-center\">\r\n                        <button onClick={this.onFormClick.bind(this)} className=\"input-btn\" disabled={this.state.pending} btn=\"day-by-day\">Day-By-Day</button>&nbsp;\r\n                        <button onClick={this.onFormClick.bind(this)} className=\"input-btn\" disabled={this.state.pending} btn=\"auto-run\">Auto Run</button>&nbsp;\r\n                        <button onClick={this.onReset.bind(this)} className=\"input-btn\" disabled={this.state.pending} type=\"button\" >Reset</button>&nbsp;\r\n                        <button onClick={this.onFormClick.bind(this)} className=\"input-btn\" disabled={this.state.pending} btn=\"export-csv\">Export CSV</button>\r\n                    </div>\r\n                </form>\r\n                <div>{this.state.message}</div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport ReactModal from \"react-modal\"\r\nimport { Ajax } from \"../Ajax\";\r\n\r\nexport class MailModal extends React.Component{\r\n\r\n\tconstructor(props){\r\n        super(props);\r\n\r\n        // input refs\r\n        this.textRef = React.createRef();\r\n        this.errorRef = React.createRef();\r\n        this.headerRef = React.createRef();\r\n\r\n        this.type = null;\r\n        this.typeError = true;\r\n        this.errorTime = false;\r\n        this.errorMsg = \"\";\r\n\r\n        this.state = { \r\n\t\t\tother: false,\r\n\t\t\terrMessage:null,\r\n\t\t\tsuccessMessage:null\r\n        };\r\n\r\n        //Modal.setAppElement(el);\r\n\r\n    }\r\n\r\n\t// on click of submit button \r\n\tsubmitClick(e){\r\n\t\tthis.setState({errMessage:null});\r\n\t\te.preventDefault();\r\n\t\tlet goodHeader = this.headerRef.current ? (this.headerRef.current.value.length > 0) : true;\r\n\t\tif(this.type != null && this.textRef.current.value != \"\" && goodHeader){\r\n\t\t\tconsole.log(this.textRef.current.value);\r\n\t\t\tlet message = this.BuildArray();\r\n\t\t\tAjax.post(`${window.location.origin}/mail`,null,{message})\r\n\t\t\t\t.then(xhr => {    \r\n                    // ajax resolved (could be bad/good request, but server responded)\r\n                    if(xhr.status === 200){\r\n                        // good request - attempt to parse results json\r\n                        try{\r\n\t\t\t\t\t\t\tthis.setState({successMessage:\"Submit Successful\"});\r\n                           // console.log(\"Text Received\");\r\n                        }\r\n                        catch(err){\r\n\t\t\t\t\t\t\t// json parse error (should never happen)\r\n\t\t\t\t\t\t\tthis.setState({errMessage:JSON.parse(err)});\r\n\t\t\t\t\t\t\t//console.log(JSON.parse(err)); // server responded with bad request signal\r\n                        }\r\n                    }\r\n                    else{\r\n\t\t\t\t\t\t// bad request\r\n\t\t\t\t\t\tthis.setState({errMessage:\"Bad Request Error\"});\r\n                        //console.log(\"Bad Request Error\");  // server responded with bad request signal\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    // ajax request died (really bad NOT a 400 error!)\r\n                    console.log(\"Really bad Error\");// request died signal\r\n                });\r\n\t\t}else{\r\n\t\t\tlet textError = this.textRef.current.value;\r\n\t\t\t//JSON.stringify\r\n\t\t\tvar errors = [];\r\n\r\n\t\t\tif(this.typeError == true){\r\n\t\t\t\terrors.push(\"No Header Selected\");\r\n\t\t\t}\r\n\r\n\t\t\tif(this.typeError == false){\r\n\t\t\t\tif(this.type == \"other\" && this.headerRef.current.value == \"\"){\r\n\t\t\t\t\terrors.push(\"No Text Entered in Other Input\")\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(textError == \"\"){\r\n\t\t\t\terrors.push(\"No Text Entered\");\r\n\t\t\t}\r\n\r\n\t\t\tif(errors.length > 0){\r\n\t\t\t\tvar errorString=\"\";\r\n\t\t\t\tfor(var i = 0;i < errors.length;i++){\r\n\t\t\t\t\terrorString += errors[i]+\"|\";\r\n\t\t\t\t}\r\n\t\t\t\tthis.setState({errMessage:errorString.substring(0,errorString.length-1)});\r\n\t\t\t}else if(errors.length == 0){\r\n\t\t\t\tthis.setState({errMessage:null});\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\t//Build the JSON array that is sent over the Ajax request\r\n\tBuildArray(){\r\n\t\t//get the text in the the message textarea\r\n\t\tlet text = this.textRef.current.value;\r\n\t\t//\r\n        let type = \"\";\r\n\r\n        if(this.state.other){\r\n        \ttype = this.headerRef.current.value;\r\n        }else{\r\n        \ttype = this.type;\r\n        }\r\n\r\n        // MUST match API expectations! \r\n        return {type,text};\r\n    }\r\n\r\n\t// on change of radio button set type\r\n\tonTypeSelect(type){\r\n\t\t//get the type of the radio button selected\r\n\t \tthis.type = type;\r\n\r\n\t\t // check to see if other is selected\r\n\t \tif(this.type == \"other\"){\r\n\t \t\tthis.setState({other: true});\r\n\t \t}else{\r\n\t \t\tthis.setState({other: false});\r\n\t \t}\r\n\r\n\t \tthis.typeError = false;\r\n\t }\r\n\r\n\t //Check if other is selcted and load elements based on that\r\n \t TypeOther(){\r\n\t \tif(!this.state.other){\r\n\t\t\t // remove element of screen\r\n\t \t\treturn null;\r\n\t \t}else{\r\n\t\t\t //load element onto screen\r\n\t \t\treturn(\r\n\t \t\t\t<div>\r\n\t \t\t\t\t<label>Other: </label> <input type=\"text\" placeholder=\"Input for other\" ref={this.headerRef}/>\r\n\t \t\t\t</div>\r\n\t \t\t);\r\n\t \t}\r\n\t }\r\n\t \r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<form>\r\n\t\t\t\t<ReactModal isOpen={this.props.showModal} >\r\n\t\t\t\t\t<div className=\"col-lg-1\">\r\n\t\t\t  \t\t\t<span className=\"nav-link\" onClick={this.props.closeModal}>&times;</span>\r\n\t\t\t  \t\t</div>\r\n\t\t\t  \t\t<div className=\"container border\">\r\n\t\t\t\t\t  <form onSubmit={this.submitClick.bind(this)}>\r\n\t\t\t\t\t\t\t<div className=\"col-lg-12 header center\">\r\n\t\t\t\t\t\t\t\t<h2 className=\"modalHeader\">Contact Us</h2>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<span className=\"error\">\r\n\t\t\t\t\t\t\t\t\t\t{this.state.errMessage}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"success\">\r\n\t\t\t\t\t\t\t\t\t\t{this.state.successMessage}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-lg-12 center\">\r\n\t\t\t\t\t\t\t\t<input type=\"radio\" onChange={(t) => this.onTypeSelect(\"Bug Report\")} name=\"types\" value=\"problem\"/>Have a problem?\r\n\t\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t\t\t<input type=\"radio\" onChange={(t) => this.onTypeSelect(\"Feature Request\")} name=\"types\" value=\"idea\"/>Have an idea?\r\n\t\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t\t\t<input type=\"radio\" onChange={(t) => this.onTypeSelect(\"other\")} name=\"types\" value=\"other\"/>Other\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-lg-12 center\">\r\n\t\t\t\t\t\t\t\t{this.TypeOther()}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-lg-12 center\">\r\n\t\t\t\t\t\t\t\t<textarea rows=\"4\" cols=\"100\" placeholder=\"Type message in here.\" ref={this.textRef}></textarea>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-lg-12 center\">\r\n\t\t\t\t\t\t\t\t<input type=\"submit\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n      \t\t\t</ReactModal>\r\n\t\t\t</form>\r\n\t\t);\r\n\t}\r\n}","import React from \"react\";\r\nimport { MailModal } from \"./MailModal\"\r\n\r\nexport class Navbar extends React.Component{\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\r\n\t    this.state = {\r\n\t    \tshowModal: false,\r\n\t    \tcloseModal:false\r\n\t    };\r\n\r\n\t}\r\n\r\n\tcloseModal(){\r\n\t\tthis.setState({showModal:false});\r\n\t}\r\n\r\n\topenModal(){\r\n\t\tthis.setState({showModal:true});\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n\t\t\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n\t\t\t\t\t\t<ul className=\"navbar-nav mr-auto\">\r\n\t\t  \t\t\t\t\t<li className=\"nav-item active\">\r\n\t\t    \t\t\t\t\t<span className=\"nav-link\" onClick={this.openModal.bind(this)}>Contact Us <span className=\"sr-only\">(current)</span></span>\r\n\t\t  \t\t\t\t\t</li>\r\n\t\t  \t\t\t\t</ul>\r\n\t\t  \t\t\t</div>\r\n\t      \t\t</nav>\r\n\t      \t\t<MailModal showModal={this.state.showModal} closeModal={this.closeModal.bind(this)} />\r\n\t      \t</div>\r\n\t\t);\r\n\t}\r\n}","import React from \"react\";\r\nimport Simulator from \"../Simulator\";\r\n\r\nexport class Chart extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tdata: null,\t\t// simulatoion data set\r\n\t\t\tday: 0\t\t\t// current simulation day\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\t// simulator singles data set loaded\r\n\t\tSimulator.on(\"data\", this.onSimulatorData.bind(this));\r\n\r\n\t\t// simulator signals a reset\r\n\t\tSimulator.on(\"reset\", this.onSimulatorReset.bind(this));\r\n\r\n\t\t// simulator signals a different day\r\n\t\tSimulator.on(\"update\", this.onSimulatorUpdate.bind(this));\r\n\t}\r\n\r\n\t// simulator got data - store it\r\n\tonSimulatorData(){\r\n\t\tthis.setState({data: Simulator.data});\r\n\t}\r\n\r\n\t// simulator reset - reset this component\r\n\tonSimulatorReset(){\r\n\t\tthis.setState({data: null, day: 0});\r\n\t}\r\n\r\n\t// simulator day changed - update component day\r\n\tonSimulatorUpdate(){\r\n\t\tthis.setState({day: Simulator.currentDay});\r\n\t}\r\n\r\n\t// renders table rows up to the current simulation day\r\n\trenderRows(){\r\n\t\tif(Simulator.hasData){\r\n\t\t\tlet rows = new Array(Simulator.currentDay + 1);\r\n\r\n\t\t\tfor(let i = 0; i <= Simulator.currentDay; i++){\r\n\t\t\t\tlet day = Simulator.data[i];\r\n\r\n\t\t\t\tlet susceptible = Math.round(day.Susceptible),\r\n\t\t\t\t\tinfected = Math.round(day.Infected),\r\n\t\t\t\t\timmune = Math.round(day.Immune),\r\n\t\t\t\t\tdead = Math.round(day.Dead),\r\n\t\t\t\t\tpopulation = Math.round(day.TotalPopulation);\r\n\r\n\t\t\t\trows[i] = (\r\n\t\t\t\t\t<tr key={i}>\r\n\t\t\t\t\t\t<td onClick={()=>Simulator.setGraphDay(i)}>{i}</td>\r\n\t\t\t\t\t\t<td>{susceptible}</td>\r\n\t\t\t\t\t\t<td>{infected}</td>\r\n\t\t\t\t\t\t<td>{immune}</td>\r\n\t\t\t\t\t\t<td>{dead}</td>\r\n\t\t\t\t\t\t<td>{population}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\treturn rows;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn this.state.data !== null ? (\r\n\t\t\t<div>\r\n\t\t\t\t<table className=\"table table-striped overflow-table\">\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th>Day</th>\r\n\t\t\t\t\t\t\t<th>Susceptible</th>\r\n\t\t\t\t\t\t\t<th>Infected</th>\r\n\t\t\t\t\t\t\t<th>Immune</th>\r\n\t\t\t\t\t\t\t<th>Dead</th>\r\n\t\t\t\t\t\t\t<th>Total Population</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{this.renderRows()}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t</div>\r\n\t\t) : null;\r\n\t}\r\n}","import React from \"react\";\r\nimport Simulator from \"../Simulator\";\r\nimport { LineChart, d3 } from \"react-d3-components\";\r\n\r\nexport class Graph extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\t\r\n\t    this.state = {\r\n\t\t\tdata: null,\t\t\t// graph data\r\n\t\t\tday: 0,\t\t\t\t// current simulation day\r\n\t\t\tyLabel: \"Infected\"\t// y-axis value\r\n\t    };\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\t// when the simulator signals it has received data\r\n\t\tSimulator.on(\"data\", this.onSimulatorData.bind(this));\r\n\r\n\t\t// when the simulator signals a reset\r\n\t\tSimulator.on(\"reset\", this.onSimulatorReset.bind(this));\r\n\r\n\t\t// when the simulator changes the day\r\n\t\tSimulator.on(\"update\", this.onSimulatorUpdate.bind(this));\r\n\r\n\t\t// when the simulator changes the graph\r\n\t\tSimulator.on(\"update-graph\", this.onSimulatorUpdateGraph.bind(this));\r\n\t}\r\n\r\n\t// simulator has data - convert to d3 format and store it\r\n\tonSimulatorData(){\r\n\t\t// update\r\n\t\tthis.setState({data: Simulator.data});\r\n\t}\r\n\r\n\t// simulator reset - reset this component\r\n\tonSimulatorReset(){\r\n\t\tthis.setState({data: null, day: 0});\r\n\t}\r\n\r\n\t// simulator update - update to the current day\r\n\tonSimulatorUpdate(){\r\n\t\tthis.setState({day: Simulator.currentDay});\r\n\t}\r\n\r\n\t// simulator update - graph change\r\n\tonSimulatorUpdateGraph(evt){\r\n\t\t// day change\r\n\t\tif(typeof evt.day === \"number\"){\r\n\t\t\tthis.setState({day: evt.day});\r\n\t\t}\r\n\t}\r\n\r\n\t// when the graph y axis drop down is changed\r\n\tonYLabelChange(evt){\r\n\t\tthis.setState({yLabel: evt.target.value})\r\n\t}\r\n\r\n\t// gets the data values up to the current day\r\n\tgetData(){\r\n\t\tif(!this.state.data || this.state.day < 1){\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tlet largestY = 0;\r\n\r\n\t\tlet data = this.state.data.map((row, index) => {\r\n\t\t\tlet y = parseFloat(row[this.state.yLabel]);\r\n\r\n\t\t\tlargestY = Math.max(largestY, y);\r\n\r\n\t\t\treturn {\r\n\t\t\t\tx: index,\r\n\t\t\t\ty\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\t// d3 wants {values:[...]}\r\n\t\tlet values = data.slice(0, this.state.day + 1);\r\n\t\treturn {values, largestY};\r\n\t}\r\n\r\n\trender(){\r\n\t\t// graph size constants\r\n\t\tconst WIDTH = \t\t540,\r\n\t\t\tHEIGHT = \t\t525,\r\n\t\t\tMARGIN_TOP = \t10,\r\n\t\t\tMARGIN_BOTTOM =\t50,\r\n\t\t\tMARGIN_LEFT = \t80,\r\n\t\t\tMARGIN_RIGHT = \t10;\r\n\r\n\t\tlet data = this.getData();\r\n\t\tif(data){\r\n\t\t\t// scale the x-axis (0 - last day) with graph width\r\n\t\t\tlet xScale = d3.scale.linear()\r\n\t\t\t\t.domain([0, data.values.length-1])\r\n\t\t\t\t.range([0, WIDTH - MARGIN_LEFT - MARGIN_RIGHT]);\r\n\t\t\t\r\n\t\t\t// scale the y-axis based on (0 - biggest y) with graph height\r\n\t\t\tlet yScale = d3.scale.linear()\r\n\t\t\t\t.domain([data.largestY, 0])\r\n\t\t\t\t.range([0, HEIGHT - MARGIN_TOP - MARGIN_BOTTOM]);\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h5></h5>\r\n\t\t\t\t\t<div className=\"GraphDropdown\" onChange={this.onYLabelChange.bind(this)}>\r\n\t\t\t\t\t\t<select className=\"form-control\">\r\n\t\t\t\t\t\t\t<option>Infected</option>\r\n\t\t\t\t\t\t\t<option>Susceptible</option>\r\n\t\t\t\t\t\t\t<option>Immune</option>\r\n\t\t\t\t\t\t\t<option>Dead</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<LineChart\r\n\t\t\t\t\t\t\tdata={data}\r\n\t\t\t\t\t\t\taxes\r\n\t\t\t\t\t\t\twidth={WIDTH}\r\n\t\t\t\t\t\t\theight={HEIGHT}\r\n\t\t\t\t\t\t\tmargin={{\r\n\t\t\t\t\t\t\t\ttop: MARGIN_TOP, bottom: MARGIN_BOTTOM,\r\n\t\t\t\t\t\t\t\tleft: MARGIN_LEFT, right: MARGIN_RIGHT\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\txAxis={{label: \"Day\"}}\r\n\t\t\t\t\t\t\tyAxis={{label: this.state.yLabel}}\r\n\t\t\t\t\t\t\txScale={xScale}\r\n\t\t\t\t\t\t\tyScale={yScale}\r\n\t\t\t\t\t\t\t//tooltipHtml={(label, pt) => `Day ${pt.x} - ${pt.y} ${this.state.yLabel}`}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n}","import \"../lib/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport React from \"react\";\r\nimport { Inputs } from \"./Inputs\";\r\nimport { Navbar } from \"./Navbar\";\r\nimport { Chart } from \"./Chart\";\r\nimport { Graph } from \"./Graph\";\r\n\r\nexport class App extends React.Component{\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Navbar/>\r\n                <br/>\r\n                <span className=\"Version\">V0.1</span>\r\n                <main className=\"container card card-body bg-light\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-6\">\r\n                            <Inputs/>\r\n                        </div>\r\n                        <div className=\"col-lg-6 graph\">\r\n                            <Graph/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-12\">\r\n                        <Chart/>\r\n                    </div>\r\n                </main>\r\n                <footer className=\"container text-center\">\r\n                    <hr/>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-6\">\r\n                            Juall | Rosenblum | Pojero | Erry \r\n                        </div>\r\n                        <div className=\"col-lg-6\">\r\n                            <a href=\"https://opensource.org/licenses/MIT\" target=\"_blank\">MIT License</a>\r\n                        </div>\r\n                    </div>\r\n                </footer>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { App } from \"./components/App\";\r\n\r\nReactDOM.render(<App/>, document.querySelector(\"#root\"));"],"sourceRoot":""}