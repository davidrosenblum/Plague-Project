{"version":3,"sources":["Ajax.js","EventEmitter.js","SimulationUpdateEvent.js","Simulator.js","components/NumSlider.jsx","components/Inputs.jsx","components/Modal.jsx","components/Navbar.jsx","components/Chart.jsx","components/Graph.jsx","components/App.jsx","index.js"],"names":["Ajax","Object","classCallCheck","this","createClass","key","value","options","arguments","length","undefined","Promise","resolve","reject","method","url","window","location","origin","headers","query","data","xhr","XMLHttpRequest","h","onload","onerror","err","queryString","open","setRequestHeader","send","JSON","stringify","request","dict","qs","param","concat","substring","EventEmitter","_listeners","event","willTrigger","type","forEach","listener","eventType","push","listeners","i","splice","SimulationUpdateEvent","day","_type","_day","get","src_Simulator","_EventEmitter","Simulator","_this","possibleConstructorReturn","getPrototypeOf","call","_currentDay","inherits","_this2","href","includes","Access-Control-Allow-Origin","then","status","parse","response","emit","Event","Error","catch","currentDay","set","NumSlider","_React$Component","props","numRef","React","createRef","rangeRef","current","init","min","evt","val","target","Math","max","react_default","a","createElement","className","label","showRange","minText","maxText","ref","onChange","onNumber","bind","step","placeholder","required","onSlide","Component","Inputs","intialImmunityRef","virilityRef","fatalityRef","initialInfectedRef","intialPopRef","infectionLengthRef","daysRef","state","pending","message","lastBtn","on","onSimulatorLoad","onSimulatorError","immune_percent","virility","fatal_percent","initial_infected","initial_population","infection_length","simulation_length","setState","reset","hasData","nextDay","load","getInputsDictionary","_this3","autoRun","createCSVDownloadURL","link","document","setAttribute","click","preventDefault","dayByDay","downloadCSV","getAttribute","onSubmit","NumSlider_NumSlider","onClick","onFormClick","disabled","btn","onReset","Modal","textRef","errorRef","headerRef","typeError","errorTime","errorMsg","other","e","console","log","BuildArray","post","textError","buildError","text","lib_default","isOpen","showModal","closeModal","submitClick","t","onTypeSelect","name","TypeOther","rows","cols","Navbar","id","openModal","Modal_Modal","Chart","onSimulatorData","onSimulatorReset","onSimulatorUpdate","Array","_loop","susceptible","round","Susceptible","infected","Infected","immune","Immune","dead","Dead","population","TotalPopulation","setGraphDay","renderRows","Graph","onSimulatorUpdateGraph","map","row","index","x","y","parseFloat","values","slice","getData","react_d3_components_lib","axes","width","height","margin","top","bottom","left","right","xAxis","yAxis","App","Navbar_Navbar","Inputs_Inputs","Graph_Graph","Chart_Chart","ReactDOM","render","App_App","querySelector"],"mappings":"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","file":"static/js/main.955a16b5.chunk.js","sourcesContent":["export class Ajax{\r\n    // sends an async http request \r\n    static request(options={}){\r\n        return new Promise((resolve, reject) => {\r\n            // extract config from options object\r\n            let method = (typeof options.method === \"string\") ? options.method : \"GET\",\r\n                url = (typeof options.url === \"string\") ? options.url : window.location.origin,\r\n                headers = (typeof options.headers === \"object\" && options.headers) ? options.headers : {},\r\n                query = (typeof options.query === \"object\" && options.query) ? options.query : {},\r\n                data = (typeof options.data !== \"undefined\") ? options.data : null;\r\n\r\n            // create the request\r\n            let xhr = new XMLHttpRequest();\r\n\r\n            // attach listeners\r\n            xhr.onload = () => resolve(xhr);\r\n            xhr.onerror = err => reject(err);\r\n\r\n            // apply query string\r\n            if(query){\r\n                url += Ajax.queryString(query);\r\n            }\r\n\r\n            // open the request\r\n            xhr.open(method, url);\r\n\r\n            // apply http headers\r\n            for(let h in headers){\r\n                xhr.setRequestHeader(h, headers[h]);\r\n            }\r\n\r\n            // send the request\r\n            // send JSON if the data is not a string\r\n            if(data){\r\n                if(typeof data !== \"string\"){\r\n                    xhr.send(JSON.stringify(data));\r\n                }\r\n                else xhr.send(data);\r\n            }\r\n            else xhr.send();\r\n        });\r\n    }\r\n\r\n    // async http get request\r\n    static get(url, headers, query){\r\n        return Ajax.request({method: \"GET\", url, headers, query});\r\n    }\r\n\r\n    // async http post request\r\n    static post(url, headers, data){\r\n        return Ajax.request({method: \"POST\", url, headers, data});\r\n    }\r\n\r\n    // creates a query string from an object\r\n    static queryString(dict){\r\n        let qs = \"?\";\r\n\r\n        for(let param in dict){\r\n            qs += `${param}=${dict[param]}&`;\r\n        }\r\n\r\n        return qs.substring(0, qs.length - 1);\r\n    }\r\n}","// simple event emitter class\r\nexport class EventEmitter{\r\n    constructor(){\r\n        this._listeners = {};   // 'private' dictionary of {eventType: listenerFunction}\r\n    }\r\n\r\n    // triggers all listening functions\r\n    emit(event){\r\n        if(this.willTrigger(event.type)){\r\n            this._listeners[event.type].forEach(listener => listener(event));\r\n        }\r\n    }\r\n\r\n    // adds a listener\r\n    on(eventType, listener){\r\n        if(this.willTrigger(eventType)){\r\n            this._listeners[eventType].push(listener);\r\n        }\r\n        else{\r\n            this._listeners[eventType] = [listener];\r\n        }\r\n    }\r\n\r\n    // removes a listener\r\n    off(eventType, listener){\r\n        if(this.willTrigger(eventType)){\r\n            let listeners = this._listeners[eventType];\r\n\r\n            for(let i = 0; i < listeners.length; i++){\r\n                if(listeners[i] === listener){\r\n                    listeners.splice(i, 1);\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // checks if there are any listeners for a given type\r\n    willTrigger(eventType){\r\n        return eventType in this._listeners;\r\n    }\r\n}","// simple event object for simulation updates \r\nexport class SimulationUpdateEvent{\r\n    constructor(type, day=null){\r\n        this._type = type;\r\n        this._day = day;\r\n    }\r\n\r\n    get type(){\r\n        return this._type;\r\n    }\r\n\r\n    get day(){\r\n        return this._day;\r\n    }\r\n}","import { Ajax } from \"./Ajax\";\r\nimport { EventEmitter } from \"./EventEmitter\";\r\nimport { SimulationUpdateEvent } from \"./SimulationUpdateEvent\";\r\n\r\n// singleton for holding simulation data\r\n// event-driven to keep chart + graph updated\r\nlet Simulator = class Simulator extends EventEmitter{\r\n    constructor(){\r\n        super();\r\n\r\n        this.data = null;       // simulation data array\r\n        this._currentDay = 0;    // 'private' current simulation day\r\n    }\r\n\r\n    // hits the API for data, signals progress\r\n    // query should be a dictionary of the inputs, will be converted into a query string\r\n    load(query){\r\n        return new Promise((resolve, reject) => {\r\n            // figure out endpoint\r\n            let url = window.location.href.includes(\"localhost\") ? \"http://localhost:8080/plague\" : `${window.location.origin}/plague`;\r\n            \r\n            // CORS headers (use foreign domain)\r\n            let headers = {\r\n                \"Access-Control-Allow-Origin\": window.location.origin\r\n            };\r\n\r\n            // ajax call with query string\r\n            // (null headers)\r\n            Ajax.get(url, headers, query)\r\n                .then(xhr => {    \r\n                    // ajax resolved (could be bad/good request, but server responded)\r\n                    if(xhr.status === 200){\r\n                        // good request - attempt to parse results json\r\n                        try{\r\n                            // parse json\r\n                            this.data = JSON.parse(xhr.response);\r\n                        }\r\n                        catch(err){\r\n                            // json parse error (should never happen)\r\n                            reject(err);\r\n                            this.emit(new Event(\"error\"));  // server responded with bad request signal\r\n                        }\r\n\r\n                        // done, resolve promise and emit load + data\r\n                        resolve();\r\n                        this.emit(new Event(\"load\"));   // server responded with good request signal\r\n\r\n                        this.emit(new Event(\"data\"));   // parsed data signal\r\n                    }\r\n                    else{\r\n                        // bad request\r\n                        reject(new Error(xhr.response || \"Bad request\"));\r\n                        this.emit(new Event(\"error\"));  // server responded with bad request signal\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    // ajax request died (really bad NOT a 400 error!)\r\n                    reject(err);\r\n                    this.emit(new Event(\"error\"));  // request died signal\r\n                });\r\n        });\r\n    }\r\n\r\n    // async download\r\n    downloadCSV(query){\r\n        let url = window.location.href.includes(\"localhost\") ? `http://localhost:8080/plague/csv` : `${window.location.origin}/plague/csv`;\r\n        return Ajax.get(url, null, query);\r\n    }\r\n\r\n    // csv download url\r\n    createCSVDownloadURL(query){\r\n        let qs = Ajax.queryString(query);\r\n        return window.location.href.includes(\"localhost\") ? `http://localhost:8080/plague/csv${qs}` : `${window.location.origin}/plague/csv${qs}`;\r\n    }\r\n\r\n    // simulation moves to the last day\r\n    // (triggers listeners)\r\n    autoRun(){\r\n        this.currentDay = this.data.length - 1; // auto emits update\r\n    }\r\n\r\n    // steps the simulation forward one day\r\n    // (triggers listeners)\r\n    nextDay(){\r\n        if(this.currentDay < this.data.length){\r\n            this.currentDay++;  // auto emits update\r\n        }\r\n    }\r\n\r\n    // resets simulation to day 0 and clears all stored data\r\n    // (triggers listeners)\r\n    reset(){\r\n        this.data = null;\r\n        this.currentDay = 0;\r\n        this.emit(new Event(\"reset\"));\r\n    }\r\n\r\n    // updates the graph day \r\n    setGraphDay(day){\r\n        this.emit(new SimulationUpdateEvent(\"update-graph\", day));\r\n    }\r\n\r\n    // always emit update\r\n    set currentDay(day){\r\n        this._currentDay = day; \r\n        this.emit(new SimulationUpdateEvent(\"update\", this.currentDay));\r\n    }\r\n\r\n    get hasData(){\r\n        return this.data !== null;\r\n    }\r\n\r\n    get currentDay(){\r\n        return this._currentDay;\r\n    }\r\n}\r\n\r\n// singleton\r\nexport default new Simulator();","import \"./NumSlider.css\";\r\nimport React from \"react\";\r\n\r\nexport class NumSlider extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.numRef = React.createRef();\r\n        this.rangeRef = React.createRef();\r\n    }\r\n\r\n    // mounted - set the default numbers\r\n    componentDidMount(){\r\n        this.numRef.current.value = this.props.init || this.props.min;\r\n        this.rangeRef.current.value = this.props.init || this.props.min;\r\n    }\r\n\r\n    // on text field input\r\n    onNumber(evt){\r\n        // set the range value to the number value\r\n        let val = evt.target.value;\r\n    \r\n        if(val.length){\r\n            // enforce min/max constraints\r\n            val = Math.min(Math.max(val, this.props.min), this.props.max); \r\n\r\n            // update inputs\r\n            this.numRef.current.value = val;\r\n            this.rangeRef.current.value = val;\r\n        }\r\n        else{\r\n            // empty input - range at min and number will be empty\r\n            this.rangeRef.current.value = this.props.min;\r\n        }\r\n    }\r\n\r\n    // on range bar move\r\n    onSlide(evt){\r\n        // set the text value to the number value\r\n        let val = evt.target.value;\r\n\r\n        // enforce min/max constraints \r\n        val = Math.min(Math.max(val, this.props.min), this.props.max);\r\n\r\n        // update number input\r\n        this.numRef.current.value = val;\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"num-slider-container\">\r\n                <div>\r\n                    <label>{this.props.label}</label>\r\n                    {this.props.showRange ? (` ${this.minText}-${this.maxText}`) : null}\r\n                </div>\r\n                <div>\r\n                    <input \r\n                        ref={this.numRef}\r\n                        onChange={this.onNumber.bind(this)}\r\n                        type=\"number\"\r\n                        min={this.props.min}\r\n                        max={this.props.max}\r\n                        step={this.props.step}\r\n                        placeholder={this.props.placeholder}\r\n                        required={this.props.required}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <input\r\n                        ref={this.rangeRef}\r\n                        onChange={this.onSlide.bind(this)}\r\n                        type=\"range\"\r\n                        min={this.props.min}\r\n                        max={this.props.max}\r\n                        step={this.props.step}\r\n                        className=\"num-slider-slider\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    get minText(){\r\n        return this.props.minText ? this.props.minText : this.props.min;\r\n    }\r\n\r\n    get maxText(){\r\n        return this.props.maxText ? this.props.maxText : this.props.max;\r\n    }\r\n\r\n    get value(){\r\n        return this.numRef.current.value;\r\n    }\r\n}","import React from \"react\";\r\nimport Simulator from \"../Simulator\";\r\nimport { NumSlider } from \"./NumSlider\";\r\n\r\nexport class Inputs extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        // input refs\r\n        this.intialImmunityRef = React.createRef();\r\n        this.virilityRef = React.createRef();\r\n        this.fatalityRef = React.createRef();\r\n        this.initialInfectedRef = React.createRef();\r\n        this.intialPopRef = React.createRef();\r\n        this.infectionLengthRef = React.createRef();\r\n        this.daysRef = React.createRef();\r\n\r\n        this.state = {\r\n            pending: false,         // no new requests while pending (disable buttons)\r\n            message: null,          // message to display (errors)\r\n            lastBtn: null\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        Simulator.on(\"load\", this.onSimulatorLoad.bind(this));\r\n        Simulator.on(\"error\", this.onSimulatorError.bind(this));\r\n    }\r\n\r\n    // creates a dictionary of all the inputs and their values (names formatted for the API call) \r\n    getInputsDictionary(){\r\n        // extract data from inputs to use in query string \r\n        let immune_percent = this.intialImmunityRef.current.value,\r\n            virility = this.virilityRef.current.value,\r\n            fatal_percent = this.fatalityRef.current.value,\r\n            initial_infected = this.initialInfectedRef.current.value,\r\n            initial_population = this.intialPopRef.current.value,\r\n            infection_length = this.infectionLengthRef.current.value,\r\n            simulation_length = this.daysRef.current.value;\r\n\r\n        // make sure infected <= population\r\n        initial_infected = Math.min(initial_infected, initial_population);\r\n\r\n        // MUST match API expectations! \r\n        return {immune_percent, virility, fatal_percent, initial_infected, initial_population, infection_length, simulation_length};\r\n    }\r\n\r\n    onSimulatorError(){\r\n        this.setState({pending: false});    // enable buttons\r\n    }\r\n\r\n    onSimulatorLoad(){\r\n        this.setState({pending: false});    // enable buttons\r\n    }\r\n\r\n    // called when then the reset button is clicked\r\n    onReset(){\r\n        // cleared stored simulation data\r\n        Simulator.reset();\r\n    }\r\n\r\n    dayByDay(){\r\n        if(!Simulator.hasData){\r\n            // disable buttons for loading time\r\n            this.setState({pending: true});\r\n\r\n            // load data then show next day\r\n            Simulator.load(this.getInputsDictionary())\r\n                .then(() => {\r\n                    this.setState({message: null}); // remove possible err message\r\n                    Simulator.nextDay();\r\n                })\r\n                .catch(err => this.setState({message: err.message}));\r\n        }\r\n        else{\r\n            Simulator.nextDay();\r\n        }\r\n    }\r\n\r\n    autoRun(){\r\n        if(!Simulator.hasData){\r\n            // disable buttons for loading time\r\n            this.setState({pending: true});\r\n\r\n            // load data then auto run\r\n            Simulator.load(this.getInputsDictionary())\r\n                .then(() => {\r\n                    this.setState({message: null}); // remove possible err message\r\n                    Simulator.autoRun();\r\n                })\r\n                .catch(err => this.setState({message: err.message}));\r\n        }\r\n        else{\r\n            Simulator.autoRun();\r\n        }\r\n    }\r\n\r\n    // downloads the csv file\r\n    downloadCSV(){\r\n        if(!this.state.pending){\r\n            // create download link (never rendered)\r\n            let url = Simulator.createCSVDownloadURL(this.getInputsDictionary());\r\n\r\n            // create a link tag\r\n            let link = document.createElement(\"a\");\r\n            link.setAttribute(\"href\", url);\r\n            link.setAttribute(\"target\", \"_blank\");\r\n            link.setAttribute(\"download\", \"download\");\r\n\r\n            // click the tag\r\n            link.click();\r\n            link = null;\r\n\r\n            /*\r\n            //this.setState({pending: true});     // disable buttons\r\n\r\n            // async csv download request\r\n            Simulator.downloadCSV(this.getInputsDictionary())\r\n                .catch(err => this.setState({message: err.message}))    // error\r\n                .then(() => this.setState({pending: false}));           // enable buttons after fulfilled/rejected\r\n            */\r\n        }\r\n    }\r\n\r\n    // called when the form is 'submitted'\r\n    // entire purpose is to block the sending of the form\r\n    // (submit enforces 'required', 'min', 'max' constraints)\r\n    onSubmit(evt){\r\n        // no default submission (using ajax instead)\r\n        evt.preventDefault();\r\n\r\n        // problem - both autorun + next day activate this... (only way to do it with using form requires)\r\n\r\n        // day-by-day was the trigger\r\n        if(this.state.lastBtn === \"day-by-day\"){\r\n            this.dayByDay();\r\n        }\r\n\r\n        // autorun was the trigger\r\n        else if(this.state.lastBtn === \"auto-run\"){\r\n            this.autoRun();\r\n        }\r\n\r\n        // csv export was the trigger\r\n        else if(this.state.lastBtn === \"export-csv\"){\r\n            this.downloadCSV();\r\n        }\r\n        \r\n    }\r\n\r\n    // sets the last button to 'day-by-day' or 'autorun'\r\n    // kinda ugly but its because form has 2 submit buttons\r\n    onFormClick(evt){\r\n        this.setState({lastBtn: evt.target.getAttribute(\"btn\")});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h5 className=\"text-center\">Experimental Variables</h5>\r\n                <form onSubmit={this.onSubmit.bind(this)}>\r\n                    <div className=\"row\">\r\n                        <div className=\"form-group col-lg-6\">\r\n                            <NumSlider\r\n                                label={\"Length of Infection (Days)\"}\r\n                                showRange={true}\r\n                                min={1}\r\n                                max={365}\r\n                                step={1}\r\n                                required={true}\r\n                                ref={this.infectionLengthRef}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group col-lg-6\">\r\n                            <NumSlider\r\n                                label={\"Virility\"}\r\n                                showRange={true}\r\n                                min={0}\r\n                                max={20}\r\n                                step={0.01}\r\n                                required={true}\r\n                                ref={this.virilityRef}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"form-group col-lg-6\">\r\n                            <NumSlider\r\n                                label={\"Fatality Percent\"}\r\n                                showRange={true}\r\n                                min={0}\r\n                                max={1}\r\n                                step={0.001}\r\n                                required={true}\r\n                                ref={this.fatalityRef}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group col-lg-6\">\r\n                            <NumSlider\r\n                                label={\"Initial Population\"}\r\n                                showRange={true}\r\n                                min={1}\r\n                                max={1000000}\r\n                                step={1}\r\n                                required={true}\r\n                                ref={this.intialPopRef}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"form-group col-lg-6\">\r\n                            <NumSlider\r\n                                label={\"Initial Immunity Percent\"}\r\n                                showRange={true}\r\n                                min={0}\r\n                                max={1}\r\n                                step={0.01}\r\n                                required={true}\r\n                                ref={this.intialImmunityRef}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group col-lg-6\">\r\n                            <NumSlider\r\n                                label={\"Initial Infected\"}\r\n                                showRange={true}\r\n                                min={0}\r\n                                max={1000000}\r\n                                maxText={\"Population\"}\r\n                                step={1}\r\n                                required={true}\r\n                                ref={this.initialInfectedRef}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"form-group col-lg-6\">\r\n                            <NumSlider\r\n                                label={\"Simulation Length (Days)\"}\r\n                                showRange={true}\r\n                                min={1}\r\n                                max={365}\r\n                                step={1}\r\n                                required={true}\r\n                                ref={this.daysRef}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group col-lg-6\">\r\n                            <label>Presets:</label>\r\n                            <select className=\"form-control\">\r\n                                <option value=\"Custom\">Custom</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group text-center\">\r\n                        <button onClick={this.onFormClick.bind(this)} className=\"input-btn\" disabled={this.state.pending} btn=\"day-by-day\">Day-By-Day</button>&nbsp;\r\n                        <button onClick={this.onFormClick.bind(this)} className=\"input-btn\" disabled={this.state.pending} btn=\"auto-run\">Auto Run</button>&nbsp;\r\n                        <button onClick={this.onReset.bind(this)} className=\"input-btn\" disabled={this.state.pending} type=\"button\" >Reset</button>&nbsp;\r\n                        <button onClick={this.onFormClick.bind(this)} className=\"input-btn\" disabled={this.state.pending} btn=\"export-csv\">Export CSV</button>\r\n                    </div>\r\n                </form>\r\n                <div>{this.state.message}</div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport ReactModal from \"react-modal\"\r\nimport { Ajax } from \"../Ajax\";\r\n\r\nexport class Modal extends React.Component{\r\n\r\n\tconstructor(props){\r\n        super(props);\r\n\r\n        // input refs\r\n        this.textRef = React.createRef();\r\n        this.errorRef = React.createRef();\r\n        this.headerRef = React.createRef();\r\n\r\n        this.type = null;\r\n        this.typeError = true;\r\n        this.errorTime = false;\r\n        this.errorMsg = \"\";\r\n\r\n        this.state = { \r\n        \tother: false\r\n        };\r\n\r\n        //Modal.setAppElement(el);\r\n\r\n    }\r\n\r\n\t// on click of submit button \r\n\tsubmitClick(e){\r\n\t\te.preventDefault();\r\n\t\tif(this.type != null && this.textRef.current.value != \"\"){\r\n\t\t\tconsole.log(this.textRef.current.value);\r\n\t\t\tlet message = this.BuildArray();\r\n\t\t\tAjax.post(`${window.location.origin}/mail`,null,{message})\r\n\t\t\t\t.then(xhr => {    \r\n                    // ajax resolved (could be bad/good request, but server responded)\r\n                    if(xhr.status === 200){\r\n                        // good request - attempt to parse results json\r\n                        try{\r\n                            console.log(\"Text Received\");\r\n                        }\r\n                        catch(err){\r\n                            // json parse error (should never happen)\r\n\t\t\t\t\t\t\tconsole.log(JSON.parse(err)); // server responded with bad request signal\r\n                        }\r\n                    }\r\n                    else{\r\n                        // bad request\r\n                        console.log(\"Bad Request Error\");  // server responded with bad request signal\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    // ajax request died (really bad NOT a 400 error!)\r\n                    console.log(\"Really bad Error\");// request died signal\r\n                });\r\n\t\t}else{\r\n\t\t\t\r\n\t\t\tlet textError = this.textRef.current.value;\r\n\r\n\t\t\tif(this.typeError == true && textError == \"\"){\r\n\t\t\t\tthis.errorMsg = \"No Header Selected|No Text Entered\";\r\n\t\t\t}else if(this.typeError == true){\r\n\t\t\t\tthis.errorMsg = \"No Header Selected\";\r\n\t\t\t}else if(textError == \"\"){\r\n\t\t\t\tthis.errorMsg = \"No Text Entered\";\r\n\t\t\t}\r\n\r\n\t\t\tif(this.errorMsg != \"\"){\r\n\t\t\t\tthis.errorTime = true;\r\n\t\t\t}\r\n\r\n\t\t\tconsole.log(\"Error Time: \"+this.errorTime);\r\n\t\t\tthis.buildError();\r\n\t\t\t\t\r\n\t\t}\r\n\t}\r\n\r\n\tBuildArray(){\r\n        let text = this.textRef.current.value;\r\n        let type = \"\";\r\n\r\n        if(this.state.other){\r\n        \ttype = this.headerRef.current.value;\r\n        }else{\r\n        \ttype = this.type;\r\n        }\r\n\r\n        // MUST match API expectations! \r\n        return {type,text};\r\n    }\r\n\r\n\t// on change of radio button set type\r\n\tonTypeSelect(type){\r\n\t \tthis.type = type;\r\n\r\n\t \tif(this.type == \"other\"){\r\n\t \t\tthis.setState({other: true});\r\n\t \t}else{\r\n\t \t\tthis.setState({other: false});\r\n\t \t}\r\n\r\n\t \tthis.typeError = false;\r\n\t }\r\n\r\n \t TypeOther(){\r\n\t \tif(!this.state.other){\r\n\t \t\treturn null;\r\n\t \t}else{\r\n\t \t\treturn(\r\n\t \t\t\t<div>\r\n\t \t\t\t\t<label>Other: </label> <input type=\"text\" placeholder=\"Input for other\" ref={this.headerRef}/>\r\n\t \t\t\t</div>\r\n\t \t\t);\r\n\t \t}\r\n\t }\r\n\r\n\tbuildError(){\r\n\t\tconsole.log(\"Error Message: \"+this.errorMsg);\r\n\t\tif(this.errorTime){\r\n\t\t\treturn(\r\n\t\t\t\t\t<span className=\"error\">\r\n\t\t\t\t\t\t{this.errorMsg}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t);\r\n\t\t}else{\r\n\t\t\tthis.errorMsg = \"\";\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\t \r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<form>\r\n\t\t\t\t<ReactModal isOpen={this.props.showModal} >\r\n\t\t\t\t\t<div className=\"col-lg-1\">\r\n\t\t\t  \t\t\t<span className=\"nav-link\" onClick={this.props.closeModal}>&times;</span>\r\n\t\t\t  \t\t</div>\r\n\t\t\t  \t\t<div className=\"container border\">\r\n\t\t\t\t\t  <form onSubmit={this.submitClick.bind(this)}>\r\n\t\t\t\t\t\t\t<div className=\"col-lg-12 header center\">\r\n\t\t\t\t\t\t\t\t<h2 className=\"modalHeader\">Contact Us</h2>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t{this.buildError()}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-lg-12 center\">\r\n\t\t\t\t\t\t\t\t<input type=\"radio\" onChange={(t) => this.onTypeSelect(\"Bug Report\")} name=\"types\" value=\"problem\"/>Have a problem?\r\n\t\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t\t\t<input type=\"radio\" onChange={(t) => this.onTypeSelect(\"Feature Request\")} name=\"types\" value=\"idea\"/>Have an idea?\r\n\t\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t\t\t<input type=\"radio\" onChange={(t) => this.onTypeSelect(\"other\")} name=\"types\" value=\"other\"/>Other\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-lg-12 center\">\r\n\t\t\t\t\t\t\t\t{this.TypeOther()}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-lg-12 center\">\r\n\t\t\t\t\t\t\t\t<textarea rows=\"4\" cols=\"100\" placeholder=\"Type message in here.\" ref={this.textRef}></textarea>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-lg-12 center\">\r\n\t\t\t\t\t\t\t\t<input type=\"submit\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n      \t\t\t</ReactModal>\r\n\t\t\t</form>\r\n\t\t);\r\n\t}\r\n}","import React from \"react\";\r\nimport { Modal } from \"./Modal\"\r\n\r\nexport class Navbar extends React.Component{\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\r\n\t    this.state = {\r\n\t    \tshowModal: false,\r\n\t    \tcloseModal:false\r\n\t    };\r\n\r\n\t}\r\n\r\n\tcloseModal(){\r\n\t\tthis.setState({showModal:false});\r\n\t}\r\n\r\n\topenModal(){\r\n\t\tthis.setState({showModal:true});\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n\t\t\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n\t\t\t\t\t\t<ul className=\"navbar-nav mr-auto\">\r\n\t\t  \t\t\t\t\t<li className=\"nav-item active\">\r\n\t\t    \t\t\t\t\t<span className=\"nav-link\" onClick={this.openModal.bind(this)}>Contact Us <span className=\"sr-only\">(current)</span></span>\r\n\t\t  \t\t\t\t\t</li>\r\n\t\t  \t\t\t\t</ul>\r\n\t\t  \t\t\t</div>\r\n\t      \t\t</nav>\r\n\t      \t\t<Modal showModal={this.state.showModal} closeModal={this.closeModal.bind(this)} />\r\n\t      \t</div>\r\n\t\t);\r\n\t}\r\n}","import React from \"react\";\r\nimport Simulator from \"../Simulator\";\r\n\r\nexport class Chart extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tdata: null,\t\t// simulatoion data set\r\n\t\t\tday: 0\t\t\t// current simulation day\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\t// simulator singles data set loaded\r\n\t\tSimulator.on(\"data\", this.onSimulatorData.bind(this));\r\n\r\n\t\t// simulator signals a reset\r\n\t\tSimulator.on(\"reset\", this.onSimulatorReset.bind(this));\r\n\r\n\t\t// simulator signals a different day\r\n\t\tSimulator.on(\"update\", this.onSimulatorUpdate.bind(this));\r\n\t}\r\n\r\n\t// simulator got data - store it\r\n\tonSimulatorData(){\r\n\t\tthis.setState({data: Simulator.data});\r\n\t}\r\n\r\n\t// simulator reset - reset this component\r\n\tonSimulatorReset(){\r\n\t\tthis.setState({data: null, day: 0});\r\n\t}\r\n\r\n\t// simulator day changed - update component day\r\n\tonSimulatorUpdate(){\r\n\t\tthis.setState({day: Simulator.currentDay});\r\n\t}\r\n\r\n\t// renders table rows up to the current simulation day\r\n\trenderRows(){\r\n\t\tif(Simulator.hasData){\r\n\t\t\tlet rows = new Array(Simulator.currentDay + 1);\r\n\r\n\t\t\tfor(let i = 0; i <= Simulator.currentDay; i++){\r\n\t\t\t\tlet day = Simulator.data[i];\r\n\r\n\t\t\t\tlet susceptible = Math.round(day.Susceptible),\r\n\t\t\t\t\tinfected = Math.round(day.Infected),\r\n\t\t\t\t\timmune = Math.round(day.Immune),\r\n\t\t\t\t\tdead = Math.round(day.Dead),\r\n\t\t\t\t\tpopulation = Math.round(day.TotalPopulation);\r\n\r\n\t\t\t\trows[i] = (\r\n\t\t\t\t\t<tr key={i}>\r\n\t\t\t\t\t\t<td onClick={()=>Simulator.setGraphDay(i)}>{i}</td>\r\n\t\t\t\t\t\t<td>{susceptible}</td>\r\n\t\t\t\t\t\t<td>{infected}</td>\r\n\t\t\t\t\t\t<td>{immune}</td>\r\n\t\t\t\t\t\t<td>{dead}</td>\r\n\t\t\t\t\t\t<td>{population}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\treturn rows;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn this.state.data !== null ? (\r\n\t\t\t<div>\r\n\t\t\t\t<table className=\"table table-striped overflow-table\">\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th>Day</th>\r\n\t\t\t\t\t\t\t<th>Susceptible</th>\r\n\t\t\t\t\t\t\t<th>Infected</th>\r\n\t\t\t\t\t\t\t<th>Immune</th>\r\n\t\t\t\t\t\t\t<th>Dead</th>\r\n\t\t\t\t\t\t\t<th>Total Population</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{this.renderRows()}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t</div>\r\n\t\t) : null;\r\n\t}\r\n}","import React from \"react\";\r\nimport Simulator from \"../Simulator\";\r\nimport { LineChart } from \"react-d3-components\";\r\n\r\nexport class Graph extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\t\r\n\t\tthis.label = \"infected\";\r\n\r\n\t    this.state = {\r\n\t\t\tdata: null,\t\t// graph points\r\n\t\t\tday: 0\t\t\t// current simulation day\r\n\t    };\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\t// when the simulator signals it has received data\r\n\t\tSimulator.on(\"data\", this.onSimulatorData.bind(this));\r\n\r\n\t\t// when the simulator signals a reset\r\n\t\tSimulator.on(\"reset\", this.onSimulatorReset.bind(this));\r\n\r\n\t\t// when the simulator changes the day\r\n\t\tSimulator.on(\"update\", this.onSimulatorUpdate.bind(this));\r\n\r\n\t\t// when the simulator changes the graph\r\n\t\tSimulator.on(\"update-graph\", this.onSimulatorUpdateGraph.bind(this));\r\n\t}\r\n\r\n\t// simulator has data - convert to d3 format and store it\r\n\tonSimulatorData(){\r\n\t\t// map a new array of {x: day, y: dead}\r\n\t\tlet data = Simulator.data.map((row, index) => {\r\n\t\t\treturn {\r\n\t\t\t\tx: index,\r\n\t\t\t\ty: parseFloat(row.Infected)\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\t// update\r\n\t\tthis.setState({data});\r\n\t}\r\n\r\n\t// simulator reset - reset this component\r\n\tonSimulatorReset(){\r\n\t\tthis.setState({data: null, day: 0});\r\n\t}\r\n\r\n\t// simulator update - update to the current day\r\n\tonSimulatorUpdate(){\r\n\t\tthis.setState({day: Simulator.currentDay});\r\n\t}\r\n\r\n\t// simulator update - graph change\r\n\tonSimulatorUpdateGraph(evt){\r\n\t\t// day change\r\n\t\tif(\"day\" in evt){\r\n\t\t\tthis.setState({day: evt.day});\r\n\t\t}\r\n\t}\r\n\r\n\t// gets the data values up to the current day\r\n\tgetData(){\r\n\t\tif(!this.state.data || this.state.day < 1){\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\t// d3 wants {values:[...]}\r\n\t\tlet values = this.state.data.slice(0, this.state.day + 1);\r\n\t\treturn {values};\r\n\t}\r\n\r\n\trender(){\r\n\t\tconsole.log(this.getData());\r\n\t\treturn this.state.data !== null ? (\r\n\t\t\t<div>\r\n\t\t\t\t<h5></h5>\r\n\t\t\t\t<div className=\"GraphDropdown\">\r\n\t\t\t\t\t<select>\r\n\t\t\t\t\t\t<option value=\"Infected\">Infected</option>\r\n\t\t\t\t\t\t<option value=\"Suscpetible\">Susceptible</option>\r\n\t\t\t\t\t\t<option value=\"Immune\">Immune</option>\r\n\t\t\t\t\t\t<option value=\"Dead\">Dead</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<LineChart\r\n\t\t\t\t\t\tdata={this.getData()}\r\n\t\t\t\t\t\taxes\r\n\t\t\t\t\t\twidth={540}\r\n\t\t\t\t\t\theight={525}\r\n\t\t\t\t\t\tmargin={{top: 10, bottom: 50, left: 80, right: 10}}\r\n\t\t\t\t\t\txAxis={{label: \"Day\"}}\r\n\t\t\t\t\t\tyAxis={{label: \"Infected\"}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t) : null;\r\n\t}\r\n}","import \"../lib/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport React from \"react\";\r\nimport { Inputs } from \"./Inputs\";\r\nimport { Navbar } from \"./Navbar\";\r\nimport { Chart } from \"./Chart\";\r\nimport { Graph } from \"./Graph\";\r\n\r\nexport class App extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            rows: null\r\n        };\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Navbar/>\r\n                <br/>\r\n                <main className=\"container card card-body bg-light\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-6\">\r\n                            <Inputs/>\r\n                        </div>\r\n                        <div className=\"col-lg-6 graph\">\r\n                            <Graph rows={this.state.rows}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-12\">\r\n                        <Chart/>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { App } from \"./components/App\";\r\n\r\nReactDOM.render(<App/>, document.querySelector(\"#root\"));"],"sourceRoot":""}