{"version":3,"sources":["Ajax.js","EventEmitter.js","SimulationUpdateEvent.js","Simulator.js","components/NumSlider.jsx","preset.js","components/Inputs.jsx","components/MailModal.jsx","components/Navbar.jsx","components/Chart.jsx","components/Graph.jsx","components/App.jsx","index.js"],"names":["Ajax","Object","classCallCheck","this","createClass","key","value","options","arguments","length","undefined","Promise","resolve","reject","method","url","window","location","origin","headers","query","data","xhr","XMLHttpRequest","h","onload","onerror","err","queryString","open","setRequestHeader","send","JSON","stringify","request","dict","qs","param","concat","substring","EventEmitter","_listeners","event","willTrigger","type","forEach","listener","eventType","push","listeners","i","splice","SimulationUpdateEvent","day","_type","_day","get","src_Simulator","_EventEmitter","Simulator","_this","possibleConstructorReturn","getPrototypeOf","call","_currentDay","_firstInvalidDay","inherits","_this2","href","includes","Access-Control-Allow-Origin","then","status","parse","response","parseInt","getResponseHeader","emit","Event","Error","catch","Content-Type","csvDataBlob","Blob","a","document","createElement","URL","createObjectURL","setAttribute","click","revokeObjectURL","message","currentDay","set","maxDays","hasData","Math","min","NumSlider","_React$Component","props","numRef","React","createRef","rangeRef","current","init","evt","val","parseFloat","target","max","react_default","className","label","showRange","minText","maxText","ref","onChange","onNumber","bind","step","placeholder","required","disabled","onSlide","n","Component","presets","Seasonal Flu","Infection Length","Transmission","Virulence","Smallpox","Polio","Measles","Ebola","H1N1 Flu","H5N1 Flu","1918 Flu","Inputs","intialImmunityRef","transmissionRef","virulenceRef","initialInfectedRef","intialPopRef","infectionLengthRef","daysRef","state","pending","lastBtn","isDisabled","on","onSimulatorLoad","onSimulatorError","URLSearchParams","search","immune_percent","transmission_rate","virulence","initial_infected","initial_population","infection_length","simulation_length","setState","reset","nextDay","load","getInputsDictionary","_this3","autoRun","_this4","downloadCSVFile","preventDefault","dayByDay","downloadCSV","getAttribute","preset","onSubmit","NumSlider_NumSlider","onPresetChange","onClick","onFormClick","btn","onReset","MailModal","textRef","errorRef","headerRef","typeError","errorTime","errorMsg","other","errMessage","successMessage","e","goodHeader","BuildArray","post","text","showModal","lib_default","isOpen","closeModal","submitClick","t","onTypeSelect","name","TypeOther","rows","cols","Navbar","id","openModal","MailModal_MailModal","Chart","onSimulatorData","onSimulatorReset","onSimulatorUpdate","Array","_loop","susceptible","round","Susceptible","infected","Infected","immune","Immune","dead","Dead","population","TotalPopulation","style","tooltip","firstInvalidDay","borderLeft","borderRight","title","setGraphDay","renderRows","Graph","yLabel","onSimulatorUpdateGraph","largestY","values","map","row","index","y","x","slice","getData","xScale","d3","scale","linear","domain","range","WIDTH","yScale","HEIGHT","onYLabelChange","react_d3_components_lib","axes","width","height","margin","top","bottom","left","right","xAxis","yAxis","App","apply","Navbar_Navbar","Inputs_Inputs","Graph_Graph","Chart_Chart","ReactDOM","render","App_App","querySelector"],"mappings":"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","file":"static/js/main.6142d281.chunk.js","sourcesContent":["export class Ajax{\r\n    // sends an async http request \r\n    static request(options={}){\r\n        return new Promise((resolve, reject) => {\r\n            // extract config from options object\r\n            let method = (typeof options.method === \"string\") ? options.method : \"GET\",\r\n                url = (typeof options.url === \"string\") ? options.url : window.location.origin,\r\n                headers = (typeof options.headers === \"object\" && options.headers) ? options.headers : {},\r\n                query = (typeof options.query === \"object\" && options.query) ? options.query : {},\r\n                data = (typeof options.data !== \"undefined\") ? options.data : null;\r\n\r\n            // create the request\r\n            let xhr = new XMLHttpRequest();\r\n\r\n            // attach listeners\r\n            xhr.onload = () => resolve(xhr);\r\n            xhr.onerror = err => reject(err);\r\n\r\n            // apply query string\r\n            if(query){\r\n                url += Ajax.queryString(query);\r\n            }\r\n\r\n            // open the request\r\n            xhr.open(method, url);\r\n\r\n            // apply http headers\r\n            for(let h in headers){\r\n                xhr.setRequestHeader(h, headers[h]);\r\n            }\r\n\r\n            // send the request\r\n            // send JSON if the data is not a string\r\n            if(data){\r\n                if(typeof data !== \"string\"){\r\n                    xhr.send(JSON.stringify(data));\r\n                }\r\n                else xhr.send(data);\r\n            }\r\n            else xhr.send();\r\n        });\r\n    }\r\n\r\n    // async http get request\r\n    static get(url, headers, query){\r\n        return Ajax.request({method: \"GET\", url, headers, query});\r\n    }\r\n\r\n    // async http post request\r\n    static post(url, headers, data){\r\n        return Ajax.request({method: \"POST\", url, headers, data});\r\n    }\r\n\r\n    // creates a query string from an object\r\n    static queryString(dict){\r\n        let qs = \"?\";\r\n\r\n        for(let param in dict){\r\n            qs += `${param}=${dict[param]}&`;\r\n        }\r\n\r\n        return qs.substring(0, qs.length - 1);\r\n    }\r\n}","// simple event emitter class\r\nexport class EventEmitter{\r\n    constructor(){\r\n        this._listeners = {};   // 'private' dictionary of {eventType: listenerFunction}\r\n    }\r\n\r\n    // triggers all listening functions\r\n    emit(event){\r\n        if(this.willTrigger(event.type)){\r\n            this._listeners[event.type].forEach(listener => listener(event));\r\n        }\r\n    }\r\n\r\n    // adds a listener\r\n    on(eventType, listener){\r\n        if(this.willTrigger(eventType)){\r\n            this._listeners[eventType].push(listener);\r\n        }\r\n        else{\r\n            this._listeners[eventType] = [listener];\r\n        }\r\n    }\r\n\r\n    // removes a listener\r\n    off(eventType, listener){\r\n        if(this.willTrigger(eventType)){\r\n            let listeners = this._listeners[eventType];\r\n\r\n            for(let i = 0; i < listeners.length; i++){\r\n                if(listeners[i] === listener){\r\n                    listeners.splice(i, 1);\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // checks if there are any listeners for a given type\r\n    willTrigger(eventType){\r\n        return eventType in this._listeners;\r\n    }\r\n}","// simple event object for simulation updates \r\nexport class SimulationUpdateEvent{\r\n    constructor(type, day=null){\r\n        this._type = type;\r\n        this._day = day;\r\n    }\r\n\r\n    get type(){\r\n        return this._type;\r\n    }\r\n\r\n    get day(){\r\n        return this._day;\r\n    }\r\n}","import { Ajax } from \"./Ajax\";\r\nimport { EventEmitter } from \"./EventEmitter\";\r\nimport { SimulationUpdateEvent } from \"./SimulationUpdateEvent\";\r\n\r\n// singleton for holding simulation data\r\n// event-driven to keep chart + graph updated\r\nlet Simulator = class Simulator extends EventEmitter{\r\n    constructor(){\r\n        super();\r\n\r\n        this.data = null;           // simulation data array\r\n        this._currentDay = 0;       // 'private' current simulation day\r\n        this._firstInvalidDay = -1; // first invalid day (-1 = no invalid days)\r\n    }\r\n\r\n    // hits the API for data, signals progress\r\n    // query should be a dictionary of the inputs, will be converted into a query string\r\n    load(query){\r\n        return new Promise((resolve, reject) => {\r\n            // figure out endpoint\r\n            let url = window.location.href.includes(\"localhost\") ? \"http://localhost:8080/plague\" : `${window.location.origin}/plague`;\r\n            \r\n            // CORS headers (use foreign domain)\r\n            let headers = {\r\n                \"Access-Control-Allow-Origin\": window.location.origin\r\n            };\r\n\r\n            // ajax call with query string\r\n            // (null headers)\r\n            Ajax.get(url, headers, query)\r\n                .then(xhr => {    \r\n                    // ajax resolved (could be bad/good request, but server responded)\r\n                    if(xhr.status === 200){\r\n                        // good request - attempt to parse results json\r\n                        try{\r\n                            // parse json\r\n                            this.data = JSON.parse(xhr.response);\r\n\r\n                            // extract first invalid day\r\n                            this._firstInvalidDay = parseInt(xhr.getResponseHeader(\"First-Invalid-Day\")) || -1;\r\n                        }\r\n                        catch(err){\r\n                            // json parse error (should never happen)\r\n                            reject(err);\r\n                            this.emit(new Event(\"error\"));  // server responded with bad request signal\r\n                        }\r\n\r\n                        // done, resolve promise and emit load + data\r\n                        resolve();\r\n                        this.emit(new Event(\"load\"));   // server responded with good request signal\r\n\r\n                        this.emit(new Event(\"data\"));   // parsed data signal\r\n                    }\r\n                    else{\r\n                        // bad request\r\n                        reject(new Error(xhr.response || \"Bad request\"));\r\n                        this.emit(new Event(\"error\"));  // server responded with bad request signal\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    // ajax request died (really bad NOT a 400 error!)\r\n                    reject(err);\r\n                    this.emit(new Event(\"error\"));  // request died signal\r\n                });\r\n        });\r\n    }\r\n\r\n    // asychronously downloads a csv file using ajax\r\n    downloadCSVFile(query){\r\n        return new Promise((resolve, reject) => {\r\n            // figure out endpoint origin\r\n            let origin = window.location.origin.includes(\"localhost\") ? \"http://localhost:8080\" : window.location.origin;\r\n\r\n            // figure out endpoint using origin\r\n            let url = `${origin}/plague`;\r\n\r\n            // http request headers\r\n            let headers = {\r\n                \"Access-Control-Allow-Origin\": window.location.origin,\r\n                \"Content-Type\": \"text/csv\"\r\n            };\r\n\r\n            // get csv file via Ajax\r\n            Ajax.get(url, headers, query)\r\n                .then(xhr => {\r\n                    // server responded\r\n                    if(xhr.status === 200){\r\n                        // good http status - download\r\n                        // xhr.response = csv text\r\n                        // convert to blob\r\n                        let csvDataBlob = new Blob([xhr.response], {type: \"octet/stream\"});\r\n\r\n                        // create a 'secret' link using the blob\r\n                        let a = document.createElement(\"a\");\r\n                        let url = window.URL.createObjectURL(csvDataBlob);\r\n\r\n                        // setup the link to download blob data\r\n                        a.setAttribute(\"download\", \"data.csv\");\r\n                        a.setAttribute(\"href\", url);\r\n\r\n                        // click the link to download the file\r\n                        a.click();\r\n                        window.URL.revokeObjectURL(url);\r\n\r\n                        // trigger any listeners\r\n                        resolve(\"File downloaded.\");\r\n                    }\r\n                    else{\r\n                        // bad http status - trigger listeners with error\r\n                        reject(new Error(xhr.response || \"Error downloading CSV file.\"));\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    // server did not responed - trigger listeners with error\r\n                    reject(new Error(err.message || \"Unable to download CSV file.\"))\r\n                });\r\n        });\r\n    }\r\n\r\n    // simulation moves to the last day\r\n    // (triggers listeners)\r\n    autoRun(){\r\n        this.currentDay = this.data.length - 1; // auto emits update\r\n    }\r\n\r\n    // steps the simulation forward one day\r\n    // (triggers listeners)\r\n    nextDay(){\r\n        if(this.currentDay < this.data.length){\r\n            this.currentDay++;  // auto emits update\r\n        }\r\n    }\r\n\r\n    // resets simulation to day 0 and clears all stored data\r\n    // (triggers listeners)\r\n    reset(){\r\n        this.data = null;\r\n        this.currentDay = 0;\r\n        this.emit(new Event(\"reset\"));\r\n    }\r\n\r\n    // updates the graph day \r\n    setGraphDay(day){\r\n        this.emit(new SimulationUpdateEvent(\"update-graph\", day));\r\n    }\r\n\r\n    // always emit update\r\n    set currentDay(day){\r\n        let maxDays = this.hasData ? (this.data.length - 1) : 0;\r\n        this._currentDay = Math.min(day, maxDays); \r\n        this.emit(new SimulationUpdateEvent(\"update\", this.currentDay));\r\n    }\r\n\r\n    get hasData(){\r\n        return this.data !== null;\r\n    }\r\n\r\n    get currentDay(){\r\n        return this._currentDay;\r\n    }\r\n\r\n    get firstInvalidDay(){\r\n        return this._firstInvalidDay;\r\n    }\r\n}\r\n\r\n// singleton\r\nexport default new Simulator();","import \"./NumSlider.css\";\r\nimport React from \"react\";\r\n\r\nexport class NumSlider extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.numRef = React.createRef();\r\n        this.rangeRef = React.createRef();\r\n    }\r\n\r\n    // mounted - set the default numbers\r\n    componentDidMount(){\r\n        this.numRef.current.value = this.props.init || this.props.min;\r\n        this.rangeRef.current.value = this.props.init || this.props.min;\r\n    }\r\n\r\n    // on text field input\r\n    onNumber(evt){\r\n        // set the range value to the number value\r\n        let val = parseFloat(evt.target.value);\r\n    \r\n        if(val){\r\n            // enforce min/max constraints\r\n            val = Math.min(Math.max(val, this.props.min), this.props.max); \r\n\r\n            // update inputs\r\n            this.numRef.current.value = val;\r\n            this.rangeRef.current.value = val;\r\n        }\r\n        else{\r\n            // empty input - range at min and number will be empty\r\n            this.rangeRef.current.value = this.props.min;\r\n        }\r\n    }\r\n\r\n    // on range bar move\r\n    onSlide(evt){\r\n        // set the text value to the number value\r\n        let val = evt.target.value;\r\n\r\n        // enforce min/max constraints \r\n        val = Math.min(Math.max(val, this.props.min), this.props.max);\r\n\r\n        // update number input\r\n        this.numRef.current.value = val;\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"num-slider-container\">\r\n                <div>\r\n                    <label>{this.props.label}</label>\r\n                    {this.props.showRange ? (` ${this.minText}-${this.maxText}`) : null}\r\n                </div>\r\n                <div>\r\n                    <input \r\n                        ref={this.numRef}\r\n                        onChange={this.onNumber.bind(this)}\r\n                        type=\"number\"\r\n                        min={this.props.min}\r\n                        max={this.props.max}\r\n                        step={this.props.step}\r\n                        placeholder={this.props.placeholder}\r\n                        required={this.props.required}\r\n                        disabled={this.props.disabled}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <input\r\n                        ref={this.rangeRef}\r\n                        onChange={this.onSlide.bind(this)}\r\n                        type=\"range\"\r\n                        min={this.props.min}\r\n                        max={this.props.max}\r\n                        step={this.props.step}\r\n                        disabled={this.props.disabled}\r\n                        className=\"num-slider-slider\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    set value(n){\r\n        this.numRef.current.value = n;\r\n        this.rangeRef.current.value = n;\r\n    }\r\n\r\n    get minText(){\r\n        return this.props.minText ? this.props.minText : this.props.min;\r\n    }\r\n\r\n    get maxText(){\r\n        return this.props.maxText ? this.props.maxText : this.props.max;\r\n    }\r\n\r\n    get value(){\r\n        return this.numRef.current.value;\r\n    }\r\n}","export const presets ={\r\n    //presets in the inputs go here\r\n    //seasonal flu\r\n   \"Seasonal Flu\":{\r\n       \"Infection Length\": 8,\r\n       \"Transmission\": 1.2,\r\n       \"Virulence\": 0.01\r\n   },\r\n   //smallpox\r\n   \"Smallpox\":{\r\n    \"Infection Length\": 14,\r\n    \"Transmission\": 2.5,\r\n    \"Virulence\": 0.25 \r\n   },\r\n   //polio\r\n   \"Polio\":{\r\n    \"Infection Length\": 18,\r\n    \"Transmission\": 1,\r\n    \"Virulence\": 0.01 \r\n   },\r\n   //measles\r\n   \"Measles\":{\r\n    \"Infection Length\": 8,\r\n    \"Transmission\": 10,\r\n    \"Virulence\": 0.01 \r\n   },\r\n   //Ebola\r\n   \"Ebola\":{\r\n    \"Infection Length\": 13,\r\n    \"Transmission\": 1.5,\r\n    \"Virulence\": 0.75 \r\n   },\r\n    //H1N1 Flu\r\n    \"H1N1 Flu\":{\r\n    \"Infection Length\": 8,\r\n    \"Transmission\": 1.6,\r\n    \"Virulence\": 0.01 \r\n    },\r\n    //H5N1 Flu\r\n   \"H5N1 Flu\":{\r\n    \"Infection Length\": 8,\r\n    \"Transmission\": 0.1,\r\n    \"Virulence\": 0.6 \r\n   },\r\n    //1918 Flu\r\n    \"1918 Flu\":{\r\n    \"Infection Length\": 8,\r\n    \"Transmission\": 2,\r\n    \"Virulence\": 0.03 \r\n    }\r\n}\r\nexport default presets;\r\n","import React from \"react\";\r\nimport Simulator from \"../Simulator\";\r\nimport { NumSlider } from \"./NumSlider\";\r\nimport preset from \"../preset\"\r\nimport { Ajax } from \"../Ajax\";\r\n\r\nexport class Inputs extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        // input refs\r\n        this.intialImmunityRef = React.createRef();\r\n        this.transmissionRef = React.createRef();\r\n        this.virulenceRef = React.createRef();\r\n        this.initialInfectedRef = React.createRef();\r\n        this.intialPopRef = React.createRef();\r\n        this.infectionLengthRef = React.createRef();\r\n        this.daysRef = React.createRef();\r\n\r\n        this.state = {\r\n            pending: false,         // no new requests while pending (disable buttons)\r\n            message: null,          // message to display (errors)\r\n            lastBtn: null,\r\n            isDisabled: false       // to disable/enable fields depending on what preset is selected\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        Simulator.on(\"load\", this.onSimulatorLoad.bind(this));\r\n        Simulator.on(\"error\", this.onSimulatorError.bind(this));\r\n\r\n        // test values\r\n        if(new URLSearchParams(window.location.search).get(\"test\") === \"true\"){\r\n            this.initialInfectedRef.current.value = 500;\r\n            this.intialImmunityRef.current.value = 0.10;\r\n            this.intialPopRef.current.value = 1000000;\r\n            this.virulenceRef.current.value = 0.25;\r\n            this.daysRef.current.value = 365;\r\n            this.infectionLengthRef.current.value = 100;\r\n            this.transmissionRef.current.value = 0.2;\r\n        }\r\n    }\r\n\r\n    // creates a dictionary of all the inputs and their values (names formatted for the API call) \r\n    getInputsDictionary(){\r\n        // extract data from inputs to use in query string \r\n        let immune_percent =        this.intialImmunityRef.current.value,\r\n            transmission_rate =     this.transmissionRef.current.value,\r\n            virulence =             this.virulenceRef.current.value,\r\n            initial_infected =      this.initialInfectedRef.current.value,\r\n            initial_population =    this.intialPopRef.current.value,\r\n            infection_length =      this.infectionLengthRef.current.value,\r\n            simulation_length =     this.daysRef.current.value;\r\n\r\n        // make sure infected <= population\r\n        initial_infected = Math.min(initial_infected, initial_population);\r\n\r\n        // MUST match API expectations! \r\n        return {immune_percent, transmission_rate, virulence, initial_infected, initial_population, infection_length, simulation_length};\r\n    }\r\n\r\n    onSimulatorError(){\r\n        this.setState({pending: false});    // enable buttons\r\n    }\r\n\r\n    onSimulatorLoad(){\r\n        this.setState({pending: false});    // enable buttons\r\n    }\r\n\r\n    // called when then the reset button is clicked\r\n    onReset(){\r\n        // cleared stored simulation data\r\n        Simulator.reset();\r\n    }\r\n\r\n    dayByDay(){\r\n        if(!Simulator.hasData){\r\n            // disable buttons for loading time\r\n            this.setState({pending: true});\r\n\r\n            // load data then show next day\r\n            Simulator.load(this.getInputsDictionary())\r\n                .then(() => {\r\n                    this.setState({message: null}); // remove possible err message\r\n                    Simulator.nextDay();\r\n                })\r\n                .catch(err => this.setState({message: err.message}));\r\n        }\r\n        else{\r\n            Simulator.nextDay();\r\n        }\r\n    }\r\n\r\n    autoRun(){\r\n        if(!Simulator.hasData){\r\n            // disable buttons for loading time\r\n            this.setState({pending: true});\r\n\r\n            // load data then auto run\r\n            Simulator.load(this.getInputsDictionary())\r\n                .then(() => {\r\n                    this.setState({message: null}); // remove possible err message\r\n                    Simulator.autoRun();\r\n                })\r\n                .catch(err => this.setState({message: err.message}));\r\n        }\r\n        else{\r\n            Simulator.autoRun();\r\n        }\r\n    }\r\n\r\n    // downloads the csv file\r\n    downloadCSV(){\r\n        if(!this.state.pending){\r\n            // disable buttons\r\n            this.setState({pending: true});\r\n\r\n            Simulator.downloadCSVFile(this.getInputsDictionary())\r\n                .catch(err => {\r\n                    // something went wrong (server did not respond or bad request)\r\n                    this.setState({message: err.message});\r\n                })\r\n                .then(() => {\r\n                    // (this fires when any response happens not successful only!)\r\n                    // always enable buttons\r\n                    this.setState({pending: false})\r\n                });\r\n        }\r\n    }\r\n\r\n    // called when the form is 'submitted'\r\n    // entire purpose is to block the sending of the form\r\n    // (submit enforces 'required', 'min', 'max' constraints)\r\n    onSubmit(evt){\r\n        // no default submission (using ajax instead)\r\n        evt.preventDefault();\r\n\r\n        // problem - both autorun + next day activate this... (only way to do it with using form requires)\r\n\r\n        // day-by-day was the trigger\r\n        if(this.state.lastBtn === \"day-by-day\"){\r\n            this.dayByDay();\r\n        }\r\n\r\n        // autorun was the trigger\r\n        else if(this.state.lastBtn === \"auto-run\"){\r\n            this.autoRun();\r\n        }\r\n\r\n        // csv export was the trigger\r\n        else if(this.state.lastBtn === \"export-csv\"){\r\n            this.downloadCSV();\r\n        }\r\n        \r\n    }\r\n\r\n    // sets the last button to 'day-by-day' or 'autorun'\r\n    // kinda ugly but its because form has 2 submit buttons\r\n    onFormClick(evt){\r\n        this.setState({lastBtn: evt.target.getAttribute(\"btn\")});\r\n    }\r\n\r\n    onPresetChange(evt){\r\n        if(evt.target.value != \"Custom\"){\r\n            this.setState({isDisabled:true});\r\n            this.infectionLengthRef.current.value = preset[evt.target.value][\"Infection Length\"];\r\n            this.transmissionRef.current.value = preset[evt.target.value][\"Transmission\"];\r\n            this.virulenceRef.current.value = preset[evt.target.value][\"Virulence\"]\r\n        }else{\r\n            this.setState({isDisabled:false});\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h5 className=\"text-center\">Experimental Variables</h5>\r\n                <form onSubmit={this.onSubmit.bind(this)}>\r\n                    <div className=\"row\">\r\n                        <div className=\"form-group col-lg-6\">\r\n                            <NumSlider\r\n                                label={\"Length of Infection (Days)\"}\r\n                                showRange={true}\r\n                                min={1}\r\n                                max={365}\r\n                                step={1}\r\n                                required={true}\r\n                                ref={this.infectionLengthRef}\r\n                                disabled={this.state.isDisabled}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group col-lg-6\">\r\n                            <NumSlider\r\n                                label={\"Transmission Rate\"}\r\n                                showRange={true}\r\n                                min={0}\r\n                                max={20}\r\n                                step={0.01}\r\n                                required={true}\r\n                                ref={this.transmissionRef}\r\n                                disabled={this.state.isDisabled}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"form-group col-lg-6\">\r\n                            <NumSlider\r\n                                label={\"Virulence\"}\r\n                                showRange={true}\r\n                                min={0}\r\n                                max={1}\r\n                                step={0.001}\r\n                                required={true}\r\n                                ref={this.virulenceRef}\r\n                                disabled={this.state.isDisabled}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group col-lg-6\">\r\n                            <NumSlider\r\n                                label={\"Initial Population\"}\r\n                                showRange={true}\r\n                                min={1}\r\n                                max={1000000}\r\n                                step={1}\r\n                                required={true}\r\n                                ref={this.intialPopRef}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"form-group col-lg-6\">\r\n                            <NumSlider\r\n                                label={\"Initial Immunity Percent\"}\r\n                                showRange={true}\r\n                                min={0}\r\n                                max={1}\r\n                                step={0.01}\r\n                                required={true}\r\n                                ref={this.intialImmunityRef}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group col-lg-6\">\r\n                            <NumSlider\r\n                                label={\"Initial Infected\"}\r\n                                showRange={true}\r\n                                min={0}\r\n                                max={1000000}\r\n                                maxText={\"Population\"}\r\n                                step={1}\r\n                                required={true}\r\n                                ref={this.initialInfectedRef}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"form-group col-lg-6\">\r\n                            <NumSlider\r\n                                label={\"Simulation Length (Days)\"}\r\n                                showRange={true}\r\n                                min={1}\r\n                                max={365}\r\n                                step={1}\r\n                                required={true}\r\n                                ref={this.daysRef}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group col-lg-6\">\r\n                            <label>Presets:</label>\r\n                            <select className=\"form-control\" onChange={this.onPresetChange.bind(this)}>\r\n                                <option>Custom</option>\r\n                                <option>Seasonal Flu</option>\r\n                                <option>Smallpox</option>\r\n                                <option>Polio</option>\r\n                                <option>Measles</option>\r\n                                <option>Ebola</option>\r\n                                <option>H1N1 Flu</option>\r\n                                <option>H5N1 Flu</option>\r\n                                <option>1918 Flu</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group text-center\">\r\n                        <button onClick={this.onFormClick.bind(this)} className=\"input-btn\" disabled={this.state.pending} btn=\"day-by-day\">Day-By-Day</button>&nbsp;\r\n                        <button onClick={this.onFormClick.bind(this)} className=\"input-btn\" disabled={this.state.pending} btn=\"auto-run\">Auto Run</button>&nbsp;\r\n                        <button onClick={this.onReset.bind(this)} className=\"input-btn\" disabled={this.state.pending} type=\"button\" >Reset</button>&nbsp;\r\n                        <button onClick={this.onFormClick.bind(this)} className=\"input-btn\" disabled={this.state.pending} btn=\"export-csv\">Export CSV</button>\r\n                    </div>\r\n                </form>\r\n                <div>{this.state.message}</div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport ReactModal from \"react-modal\"\r\nimport { Ajax } from \"../Ajax\";\r\n\r\nexport class MailModal extends React.Component{\r\n\r\n\tconstructor(props){\r\n        super(props);\r\n\r\n        // input refs\r\n        this.textRef = React.createRef();\r\n        this.errorRef = React.createRef();\r\n        this.headerRef = React.createRef();\r\n\r\n        this.type = null;\r\n        this.typeError = true;\r\n        this.errorTime = false;\r\n        this.errorMsg = \"\";\r\n\r\n        this.state = { \r\n\t\t\tother: false,\r\n\t\t\terrMessage:null,\r\n\t\t\tsuccessMessage:null\r\n        };\r\n\r\n        //Modal.setAppElement(this.props.app);\r\n\r\n\t}\r\n\r\n\t// on click of submit button \r\n\tsubmitClick(e){\r\n\t\tthis.setState({errMessage:null});\r\n\t\te.preventDefault();\r\n\t\tlet goodHeader = this.headerRef.current ? (this.headerRef.current.value.length > 0) : true;\r\n\t\tif(this.type != null && this.textRef.current.value != \"\" && goodHeader){\r\n\t\t\tlet message = this.BuildArray();\r\n\r\n\t\t\t// localhost = dev, else = prod\r\n\t\t\tlet origin = window.location.origin.includes(\"localhost\") ? \"http://localhost:8080\" : window.location.origin;\r\n\r\n\t\t\tAjax.post(`${origin}/mail`,null,{message})\r\n\t\t\t\t.then(xhr => {    \r\n                    // ajax resolved (could be bad/good request, but server responded)\r\n                    if(xhr.status === 200){\r\n                        // good request - attempt to parse results json\r\n                        try{\r\n\t\t\t\t\t\t\tthis.setState({successMessage:\"Submit Successful\"});\r\n                        }\r\n                        catch(err){\r\n\t\t\t\t\t\t\t// json parse error (should never happen)\r\n\t\t\t\t\t\t\tthis.setState({errMessage:JSON.parse(err)});\r\n\t\t\t\t\t\t\t// server responded with bad request signal\r\n                        }\r\n                    }\r\n                    else{\r\n\t\t\t\t\t\t// bad request\r\n\t\t\t\t\t\tthis.setState({errMessage:\"Bad Request Error\"});\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    // ajax request died (really bad NOT a 400 error!)\r\n\t\t\t\t\tthis.setState({errMessage:\"Cannot reach server\"});// request died signal\r\n                });\r\n\t\t}else{\r\n\t\t\r\n\t\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\t//Build the JSON array that is sent over the Ajax request\r\n\tBuildArray(){\r\n\t\t//get the text in the the message textarea\r\n\t\tlet text = this.textRef.current.value;\r\n\t\t//\r\n        let type = \"\";\r\n\r\n        if(this.state.other){\r\n        \ttype = this.headerRef.current.value;\r\n        }else{\r\n        \ttype = this.type;\r\n        }\r\n\r\n        // MUST match API expectations! \r\n        return {type,text};\r\n    }\r\n\r\n\t// on change of radio button set type\r\n\tonTypeSelect(type){\r\n\t\t//get the type of the radio button selected\r\n\t \tthis.type = type;\r\n\r\n\t\t // check to see if other is selected\r\n\t \tif(this.type == \"other\"){\r\n\t \t\tthis.setState({other: true});\r\n\t \t}else{\r\n\t \t\tthis.setState({other: false});\r\n\t \t}\r\n\r\n\t \tthis.typeError = false;\r\n\t }\r\n\r\n\t //Check if other is selcted and load elements based on that\r\n \t TypeOther(){\r\n\t \tif(!this.state.other){\r\n\t\t\t // remove element of screen\r\n\t \t\treturn null;\r\n\t \t}else{\r\n\t\t\t //load element onto screen\r\n\t \t\treturn(\r\n\t \t\t\t<div>\r\n\t \t\t\t\t<label>Other: </label> <input type=\"text\" placeholder=\"Input for other\" ref={this.headerRef} required/>\r\n\t \t\t\t</div>\r\n\t \t\t);\r\n\t \t}\r\n\t }\r\n\t \r\n\trender(){\r\n\t\treturn this.props.showModal ? (\r\n\t\t\t<form>\r\n\t\t\t\t<ReactModal isOpen={this.props.showModal} >\r\n\t\t\t\t\t<div className=\"col-lg-1\">\r\n\t\t\t  \t\t\t<span className=\"nav-link\" onClick={this.props.closeModal}>&times;</span>\r\n\t\t\t  \t\t</div>\r\n\t\t\t  \t\t<div className=\"container border\">\r\n\t\t\t\t\t  <form onSubmit={this.submitClick.bind(this)}>\r\n\t\t\t\t\t\t\t<div className=\"col-lg-12 header center\">\r\n\t\t\t\t\t\t\t\t<h2 className=\"modalHeader\">Contact Us</h2>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<span className=\"error\">\r\n\t\t\t\t\t\t\t\t\t\t{this.state.errMessage}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"success\">\r\n\t\t\t\t\t\t\t\t\t\t{this.state.successMessage}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-lg-12 center\">\r\n\t\t\t\t\t\t\t\t<input type=\"radio\" onChange={(t) => this.onTypeSelect(\"Bug Report\")} name=\"types\" value=\"problem\" required/>Have a problem?\r\n\t\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t\t\t<input type=\"radio\" onChange={(t) => this.onTypeSelect(\"Feature Request\")} name=\"types\" value=\"idea\" required/>Have an idea?\r\n\t\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t\t\t<input type=\"radio\" onChange={(t) => this.onTypeSelect(\"other\")} name=\"types\" value=\"other\" required/>Other\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-lg-12 center\">\r\n\t\t\t\t\t\t\t\t{this.TypeOther()}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-lg-12 center\">\r\n\t\t\t\t\t\t\t\t<textarea rows=\"4\" cols=\"100\" placeholder=\"Type message in here.\" ref={this.textRef} required></textarea>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-lg-12 center\">\r\n\t\t\t\t\t\t\t\t<input type=\"submit\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n      \t\t\t</ReactModal>\r\n\t\t\t</form>\r\n\t\t) : null;\r\n\t}\r\n}","import React from \"react\";\r\nimport { MailModal } from \"./MailModal\"\r\n\r\nexport class Navbar extends React.Component{\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\r\n\t    this.state = {\r\n\t    \tshowModal: false,\r\n\t    \tcloseModal:false\r\n\t    };\r\n\r\n\t}\r\n\r\n\tcloseModal(){\r\n\t\tthis.setState({showModal:false});\r\n\t}\r\n\r\n\topenModal(){\r\n\t\tthis.setState({showModal:true});\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n\t\t\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n\t\t\t\t\t\t<ul className=\"navbar-nav mr-auto\">\r\n\t\t  \t\t\t\t\t<li className=\"nav-item active\">\r\n\t\t    \t\t\t\t\t<span className=\"nav-link\" onClick={this.openModal.bind(this)}>Contact Us <span className=\"sr-only\">(current)</span></span>\r\n\t\t  \t\t\t\t\t</li>\r\n\t\t  \t\t\t\t</ul>\r\n\t\t  \t\t\t</div>\r\n\t      \t\t</nav>\r\n\t      \t\t<MailModal showModal={this.state.showModal} closeModal={this.closeModal.bind(this)} />\r\n\t      \t</div>\r\n\t\t);\r\n\t}\r\n}","import React from \"react\";\r\nimport Simulator from \"../Simulator\";\r\n\r\nexport class Chart extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tdata: null,\t\t// simulatoion data set\r\n\t\t\tday: 0\t\t\t// current simulation day\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\t// simulator singles data set loaded\r\n\t\tSimulator.on(\"data\", this.onSimulatorData.bind(this));\r\n\r\n\t\t// simulator signals a reset\r\n\t\tSimulator.on(\"reset\", this.onSimulatorReset.bind(this));\r\n\r\n\t\t// simulator signals a different day\r\n\t\tSimulator.on(\"update\", this.onSimulatorUpdate.bind(this));\r\n\t}\r\n\r\n\t// simulator got data - store it\r\n\tonSimulatorData(){\r\n\t\tthis.setState({data: Simulator.data});\r\n\t}\r\n\r\n\t// simulator reset - reset this component\r\n\tonSimulatorReset(){\r\n\t\tthis.setState({data: null, day: 0});\r\n\t}\r\n\r\n\t// simulator day changed - update component day\r\n\tonSimulatorUpdate(){\r\n\t\tthis.setState({day: Simulator.currentDay});\r\n\t}\r\n\r\n\t// renders table rows up to the current simulation day\r\n\trenderRows(){\r\n\t\tif(Simulator.hasData){\r\n\t\t\tlet rows = new Array(Simulator.currentDay + 1);\r\n\r\n\t\t\tfor(let i = 0; i <= Simulator.currentDay; i++){\r\n\t\t\t\t// get json for the say\r\n\t\t\t\tlet day = Simulator.data[i];\r\n\r\n\t\t\t\t// extract data\r\n\t\t\t\tlet susceptible = Math.round(day.Susceptible),\r\n\t\t\t\t\tinfected = Math.round(day.Infected),\r\n\t\t\t\t\timmune = Math.round(day.Immune),\r\n\t\t\t\t\tdead = Math.round(day.Dead),\r\n\t\t\t\t\tpopulation = Math.round(day.TotalPopulation);\r\n\r\n\t\t\t\t// first invalid day?\r\n\t\t\t\tlet style = null, tooltip = null;\r\n\t\t\t\tif(i === Simulator.firstInvalidDay){\r\n\t\t\t\t\t// this row is first invalid day\r\n\t\t\t\t\tstyle = {\r\n\t\t\t\t\t\tborderLeft: \"5px solid red\",\r\n\t\t\t\t\t\tborderRight: \"5px solid red\"\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\ttooltip = `Data correction begins at day ${i}.`;\r\n\t\t\t\t}\r\n\r\n\t\t\t\trows[i] = (\r\n\t\t\t\t\t<tr key={i} style={style} title={tooltip}>\r\n\t\t\t\t\t\t<td onClick={()=>Simulator.setGraphDay(i)}>{i}</td>\r\n\t\t\t\t\t\t<td>{susceptible}</td>\r\n\t\t\t\t\t\t<td>{infected}</td>\r\n\t\t\t\t\t\t<td>{immune}</td>\r\n\t\t\t\t\t\t<td>{dead}</td>\r\n\t\t\t\t\t\t<td>{population}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\treturn rows;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn this.state.data !== null ? (\r\n\t\t\t<div>\r\n\t\t\t\t<table className=\"table table-striped overflow-table\">\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th>Day</th>\r\n\t\t\t\t\t\t\t<th>Susceptible</th>\r\n\t\t\t\t\t\t\t<th>Infected</th>\r\n\t\t\t\t\t\t\t<th>Immune</th>\r\n\t\t\t\t\t\t\t<th>Dead</th>\r\n\t\t\t\t\t\t\t<th>Total Population</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{this.renderRows()}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t</div>\r\n\t\t) : null;\r\n\t}\r\n}","import React from \"react\";\r\nimport Simulator from \"../Simulator\";\r\nimport { LineChart, d3 } from \"react-d3-components\";\r\n\r\nexport class Graph extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\t\r\n\t    this.state = {\r\n\t\t\tdata: null,\t\t\t// graph data\r\n\t\t\tday: 0,\t\t\t\t// current simulation day\r\n\t\t\tyLabel: \"Infected\"\t// y-axis value\r\n\t    };\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\t// when the simulator signals it has received data\r\n\t\tSimulator.on(\"data\", this.onSimulatorData.bind(this));\r\n\r\n\t\t// when the simulator signals a reset\r\n\t\tSimulator.on(\"reset\", this.onSimulatorReset.bind(this));\r\n\r\n\t\t// when the simulator changes the day\r\n\t\tSimulator.on(\"update\", this.onSimulatorUpdate.bind(this));\r\n\r\n\t\t// when the simulator changes the graph\r\n\t\tSimulator.on(\"update-graph\", this.onSimulatorUpdateGraph.bind(this));\r\n\t}\r\n\r\n\t// simulator has data - convert to d3 format and store it\r\n\tonSimulatorData(){\r\n\t\t// update\r\n\t\tthis.setState({data: Simulator.data});\r\n\t}\r\n\r\n\t// simulator reset - reset this component\r\n\tonSimulatorReset(){\r\n\t\tthis.setState({data: null, day: 0});\r\n\t}\r\n\r\n\t// simulator update - update to the current day\r\n\tonSimulatorUpdate(){\r\n\t\tthis.setState({day: Simulator.currentDay});\r\n\t}\r\n\r\n\t// simulator update - graph change\r\n\tonSimulatorUpdateGraph(evt){\r\n\t\t// day change\r\n\t\tif(typeof evt.day === \"number\"){\r\n\t\t\tthis.setState({day: evt.day});\r\n\t\t}\r\n\t}\r\n\r\n\t// when the graph y axis drop down is changed\r\n\tonYLabelChange(evt){\r\n\t\tthis.setState({yLabel: evt.target.value})\r\n\t}\r\n\r\n\t// gets the data values up to the current day\r\n\tgetData(){\r\n\t\tif(!this.state.data || this.state.day < 1){\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tlet largestY = 0;\r\n\r\n\t\tlet data = this.state.data.map((row, index) => {\r\n\t\t\tlet y = parseFloat(row[this.state.yLabel]);\r\n\r\n\t\t\tlargestY = Math.max(largestY, y);\r\n\r\n\t\t\treturn {\r\n\t\t\t\tx: index,\r\n\t\t\t\ty\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\t// d3 wants {values:[...]}\r\n\t\tlet values = data.slice(0, this.state.day + 1);\r\n\t\treturn {values, largestY};\r\n\t}\r\n\r\n\trender(){\r\n\t\t// graph size constants\r\n\t\tconst WIDTH = \t\t540,\r\n\t\t\tHEIGHT = \t\t525,\r\n\t\t\tMARGIN_TOP = \t10,\r\n\t\t\tMARGIN_BOTTOM =\t50,\r\n\t\t\tMARGIN_LEFT = \t80,\r\n\t\t\tMARGIN_RIGHT = \t10;\r\n\r\n\t\tlet data = this.getData();\r\n\t\tif(data){\r\n\t\t\t// scale the x-axis (0 - last day) with graph width\r\n\t\t\tlet xScale = d3.scale.linear()\r\n\t\t\t\t.domain([0, data.values.length-1])\r\n\t\t\t\t.range([0, WIDTH - MARGIN_LEFT - MARGIN_RIGHT]);\r\n\t\t\t\r\n\t\t\t// scale the y-axis based on (0 - biggest y) with graph height\r\n\t\t\tlet yScale = d3.scale.linear()\r\n\t\t\t\t.domain([data.largestY, 0])\r\n\t\t\t\t.range([0, HEIGHT - MARGIN_TOP - MARGIN_BOTTOM]);\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h5></h5>\r\n\t\t\t\t\t<div className=\"GraphDropdown\" onChange={this.onYLabelChange.bind(this)}>\r\n\t\t\t\t\t\t<select className=\"form-control\">\r\n\t\t\t\t\t\t\t<option>Infected</option>\r\n\t\t\t\t\t\t\t<option>Susceptible</option>\r\n\t\t\t\t\t\t\t<option>Immune</option>\r\n\t\t\t\t\t\t\t<option>Dead</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<LineChart\r\n\t\t\t\t\t\t\tdata={data}\r\n\t\t\t\t\t\t\taxes\r\n\t\t\t\t\t\t\twidth={WIDTH}\r\n\t\t\t\t\t\t\theight={HEIGHT}\r\n\t\t\t\t\t\t\tmargin={{\r\n\t\t\t\t\t\t\t\ttop: MARGIN_TOP, bottom: MARGIN_BOTTOM,\r\n\t\t\t\t\t\t\t\tleft: MARGIN_LEFT, right: MARGIN_RIGHT\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\txAxis={{label: \"Day\"}}\r\n\t\t\t\t\t\t\tyAxis={{label: this.state.yLabel}}\r\n\t\t\t\t\t\t\txScale={xScale}\r\n\t\t\t\t\t\t\tyScale={yScale}\r\n\t\t\t\t\t\t\t//tooltipHtml={(label, pt) => `Day ${pt.x} - ${pt.y} ${this.state.yLabel}`}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n}","import \"../lib/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport React from \"react\";\r\nimport { Inputs } from \"./Inputs\";\r\nimport { Navbar } from \"./Navbar\";\r\nimport { Chart } from \"./Chart\";\r\nimport { Graph } from \"./Graph\";\r\n\r\nexport class App extends React.Component{\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Navbar/>\r\n                <br/>\r\n                <span className=\"Version\">V0.1</span>\r\n                <main className=\"container card card-body bg-light\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-6\">\r\n                            <Inputs/>\r\n                        </div>\r\n                        <div className=\"col-lg-6 graph\">\r\n                            <Graph/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-12\">\r\n                        <Chart/>\r\n                    </div>\r\n                </main>\r\n                <footer className=\"container text-center\">\r\n                    <hr/>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-6\">\r\n                            Juall | Rosenblum | Pojero | Erry \r\n                        </div>\r\n                        <div className=\"col-lg-6\">\r\n                            <a href=\"https://opensource.org/licenses/MIT\" target=\"_blank\">MIT License</a>\r\n                        </div>\r\n                    </div>\r\n                </footer>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { App } from \"./components/App\";\r\n\r\nReactDOM.render(<App/>, document.querySelector(\"#root\"));"],"sourceRoot":""}